package com.technologica.resourcegen.data.worldgen.configuredfeature;

import java.util.List;

import com.technologica.api.tlregen.resourcegen.data.worldgen.TLReGenWorldgenConfiguredFeature;
import com.technologica.registration.deferred.TechnologicaBlocks;
import com.technologica.registration.key.TechnologicaConfiguredFeatures;
import com.technologica.registration.key.TechnologicaPlacedFeatures;

import net.minecraft.core.Holder;
import net.minecraft.tags.BlockTags;
import net.minecraft.world.level.block.Blocks;
import net.minecraft.world.level.levelgen.feature.configurations.OreConfiguration;
import net.minecraft.world.level.levelgen.placement.PlacedFeature;
import net.minecraft.world.level.levelgen.structure.templatesystem.RuleTest;
import net.minecraft.world.level.levelgen.structure.templatesystem.TagMatchTest;

@SuppressWarnings("deprecation")
public final class TLWorldgenConfiguredFeatures extends TLReGenWorldgenConfiguredFeature {
	@Override
	protected void populate() {
		RuleTest ruletest1 = new TagMatchTest(BlockTags.STONE_ORE_REPLACEABLES);
		RuleTest ruletest2 = new TagMatchTest(BlockTags.DEEPSLATE_ORE_REPLACEABLES);

		List<OreConfiguration.TargetBlockState> ORE_SPODUMENE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.SPODUMENE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_SPODUMENE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_BORAX_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.BORAX_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_BORAX_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_MAGNESITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.MAGNESITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_MAGNESITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_BAUXITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.BAUXITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_BAUXITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_APATITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.APATITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_APATITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_PHOSPHORITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.PHOSPHORITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_PHOSPHORITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_GADOLINITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.GADOLINITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_GADOLINITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_ILMENITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.ILMENITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_ILMENITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_PATRONITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.PATRONITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_PATRONITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_CHROMITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.CHROMITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_CHROMITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_PYROLUSITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.PYROLUSITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_PYROLUSITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_COBALTITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.COBALTITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_COBALTITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_GARNIERITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.GARNIERITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_GARNIERITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_ARSENOPYRITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.ARSENOPYRITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_ARSENOPYRITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_CROOKESITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.CROOKESITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_CROOKESITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_LEPIDOLITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.LEPIDOLITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_LEPIDOLITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_BASTNAESITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.BASTNAESITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_BASTNAESITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_TANTALITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.TANTALITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_TANTALITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_MOLYBDENITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.MOLYBDENITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_MOLYBDENITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_PENTLANDITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.PENTLANDITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_PENTLANDITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_ARGENTITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.ARGENTITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_ARGENTITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_GALENA_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.GALENA_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_GALENA_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_SYLVANITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.SYLVANITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_SYLVANITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_CASSITERITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.CASSITERITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_CASSITERITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_WOLFRAMITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.WOLFRAMITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_WOLFRAMITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_OSMIRIDIUM_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.OSMIRIDIUM_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_OSMIRIDIUM_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_PLATINUM_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.PLATINUM_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_PLATINUM_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_CINNABAR_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.CINNABAR_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_CINNABAR_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_THORIANITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.THORIANITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_THORIANITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_URANINITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.URANINITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_URANINITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_EMERALD_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, Blocks.EMERALD_ORE.defaultBlockState()), OreConfiguration.target(ruletest2, Blocks.DEEPSLATE_EMERALD_ORE.defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_RUBY_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.RUBY_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_RUBY_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_SAPPHIRE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.SAPPHIRE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_SAPPHIRE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_TOPAZ_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.TOPAZ_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_TOPAZ_ORE.get().defaultBlockState()));

		Holder<PlacedFeature> holder4 = Holder.Reference.createStandAlone(ho, TechnologicaPlacedFeatures.TEAK_CHECKED);
		Holder<PlacedFeature> holder5 = Holder.Reference.createStandAlone(ho, TechnologicaPlacedFeatures.CHERRY_CHECKED);
		Holder<PlacedFeature> holder6 = Holder.Reference.createStandAlone(ho, TechnologicaPlacedFeatures.PLUM_CHECKED);
		Holder<PlacedFeature> holder7 = Holder.Reference.createStandAlone(ho, TechnologicaPlacedFeatures.CHESTNUT_CHECKED);
		Holder<PlacedFeature> holder8 = Holder.Reference.createStandAlone(ho, TechnologicaPlacedFeatures.PEACH_CHECKED);
		Holder<PlacedFeature> holder9 = Holder.Reference.createStandAlone(ho, TechnologicaPlacedFeatures.ASPEN_CHECKED);
		Holder<PlacedFeature> holder10 = Holder.Reference.createStandAlone(ho, TechnologicaPlacedFeatures.COCONUT_CHECKED);
		Holder<PlacedFeature> holder11 = Holder.Reference.createStandAlone(ho, TechnologicaPlacedFeatures.APRICOT_CHECKED);
		Holder<PlacedFeature> holder12 = Holder.Reference.createStandAlone(ho, TechnologicaPlacedFeatures.PEAR_CHECKED);
		Holder<PlacedFeature> holder13 = Holder.Reference.createStandAlone(ho, TechnologicaPlacedFeatures.MAPLE_CHECKED);
		Holder<PlacedFeature> holder14 = Holder.Reference.createStandAlone(ho, TechnologicaPlacedFeatures.WALNUT_CHECKED);
		Holder<PlacedFeature> holder15 = Holder.Reference.createStandAlone(ho, TechnologicaPlacedFeatures.ORANGE_CHECKED);

		configuredFeature(TechnologicaConfiguredFeatures.BRINE_POOL_CONFIGURED);
		configuredFeature(TechnologicaConfiguredFeatures.NATURAL_GAS_DEPOSIT_CONFIGURED);
		configuredFeature(TechnologicaConfiguredFeatures.OASIS_CONFIGURED);
		configuredFeature(TechnologicaConfiguredFeatures.OIL_WELL_CONFIGURED);
		configuredFeature(TechnologicaConfiguredFeatures.ORE_SPODUMENE);
		configuredFeature(TechnologicaConfiguredFeatures.ORE_BORAX);
		configuredFeature(TechnologicaConfiguredFeatures.ORE_MAGNESITE);
		configuredFeature(TechnologicaConfiguredFeatures.ORE_BAUXITE);
		configuredFeature(TechnologicaConfiguredFeatures.ORE_APATITE);
		configuredFeature(TechnologicaConfiguredFeatures.ORE_PHOSPHORITE);
		configuredFeature(TechnologicaConfiguredFeatures.ORE_GADOLINITE);
		configuredFeature(TechnologicaConfiguredFeatures.ORE_ILMENITE);
		configuredFeature(TechnologicaConfiguredFeatures.ORE_PATRONITE);
		configuredFeature(TechnologicaConfiguredFeatures.ORE_CHROMITE);
		configuredFeature(TechnologicaConfiguredFeatures.ORE_PYROLUSITE);
		configuredFeature(TechnologicaConfiguredFeatures.ORE_COBALTITE);
		configuredFeature(TechnologicaConfiguredFeatures.ORE_GARNIERITE);
		configuredFeature(TechnologicaConfiguredFeatures.ORE_ARSENOPYRITE);
		configuredFeature(TechnologicaConfiguredFeatures.ORE_CROOKESITE);
		configuredFeature(TechnologicaConfiguredFeatures.ORE_LEPIDOLITE);
		configuredFeature(TechnologicaConfiguredFeatures.ORE_BASTNAESITE);
		configuredFeature(TechnologicaConfiguredFeatures.ORE_TANTALITE);
		configuredFeature(TechnologicaConfiguredFeatures.ORE_MOLYBDENITE);
		configuredFeature(TechnologicaConfiguredFeatures.ORE_PENTLANDITE);
		configuredFeature(TechnologicaConfiguredFeatures.ORE_ARGENTITE);
		configuredFeature(TechnologicaConfiguredFeatures.ORE_GALENA);
		configuredFeature(TechnologicaConfiguredFeatures.ORE_SYLVANITE);
		configuredFeature(TechnologicaConfiguredFeatures.ORE_CASSITERITE);
		configuredFeature(TechnologicaConfiguredFeatures.ORE_WOLFRAMITE);
		configuredFeature(TechnologicaConfiguredFeatures.ORE_OSMIRIDIUM);
		configuredFeature(TechnologicaConfiguredFeatures.ORE_PLATINUM);
		configuredFeature(TechnologicaConfiguredFeatures.ORE_CINNABAR);
		configuredFeature(TechnologicaConfiguredFeatures.ORE_THORIANITE);
		configuredFeature(TechnologicaConfiguredFeatures.ORE_URANINITE);
		configuredFeature(TechnologicaConfiguredFeatures.ORE_EMERALD);
		configuredFeature(TechnologicaConfiguredFeatures.ORE_RUBY);
		configuredFeature(TechnologicaConfiguredFeatures.ORE_SAPPHIRE);
		configuredFeature(TechnologicaConfiguredFeatures.ORE_TOPAZ);
		configuredFeature(TechnologicaConfiguredFeatures.APRICOT);
		configuredFeature(TechnologicaConfiguredFeatures.ASPEN);
		configuredFeature(TechnologicaConfiguredFeatures.AVOCADO);
		configuredFeature(TechnologicaConfiguredFeatures.BANANA);
		configuredFeature(TechnologicaConfiguredFeatures.CHERRY);
		configuredFeature(TechnologicaConfiguredFeatures.CHESTNUT);
		configuredFeature(TechnologicaConfiguredFeatures.CINNAMON);
		configuredFeature(TechnologicaConfiguredFeatures.COCONUT);
		configuredFeature(TechnologicaConfiguredFeatures.EBONY);
		configuredFeature(TechnologicaConfiguredFeatures.KIWI);
		configuredFeature(TechnologicaConfiguredFeatures.LEMON);
		configuredFeature(TechnologicaConfiguredFeatures.LIME);
		configuredFeature(TechnologicaConfiguredFeatures.MAHOGANY);
		configuredFeature(TechnologicaConfiguredFeatures.MAPLE);
		configuredFeature(TechnologicaConfiguredFeatures.OLIVE);
		configuredFeature(TechnologicaConfiguredFeatures.ORANGE);
		configuredFeature(TechnologicaConfiguredFeatures.PEACH);
		configuredFeature(TechnologicaConfiguredFeatures.PEAR);
		configuredFeature(TechnologicaConfiguredFeatures.PLUM);
		configuredFeature(TechnologicaConfiguredFeatures.REDWOOD);
		configuredFeature(TechnologicaConfiguredFeatures.ROSEWOOD);
		configuredFeature(TechnologicaConfiguredFeatures.RUBBER);
		configuredFeature(TechnologicaConfiguredFeatures.TEAK);
		configuredFeature(TechnologicaConfiguredFeatures.WALNUT);
		configuredFeature(TechnologicaConfiguredFeatures.ZEBRAWOOD);
		configuredFeature(TechnologicaConfiguredFeatures.ANCIENT_AMBROSIA);
		configuredFeature(TechnologicaConfiguredFeatures.BENEVOLENT_APOTHECARY);
		configuredFeature(TechnologicaConfiguredFeatures.CRYOGENIC_SPIRE);
		configuredFeature(TechnologicaConfiguredFeatures.MALEVOLENT_APOTHECARY);
		configuredFeature(TechnologicaConfiguredFeatures.NECROTIC);
		configuredFeature(TechnologicaConfiguredFeatures.SERENDIPITOUS_APOTHECARY);
		configuredFeature(TechnologicaConfiguredFeatures.THUNDEROUS_CONDUCTOR);
		configuredFeature(TechnologicaConfiguredFeatures.TOWERING_INFERNO);
		configuredFeature(TechnologicaConfiguredFeatures.TREES_MODIFIED_SAVANNA);
		// configuredFeature(TechnologicaConfiguredFeatures.TREES_MODIFIED_JUNGLE);
		configuredFeature(TechnologicaConfiguredFeatures.TREES_MODIFIED_JUNGLE_EDGE);
		configuredFeature(TechnologicaConfiguredFeatures.TREES_MODIFIED_BAMBOO_JUNGLE);
		configuredFeature(TechnologicaConfiguredFeatures.TREES_MODIFIED_FOREST);
		configuredFeature(TechnologicaConfiguredFeatures.TREES_MODIFIED_BIRCH_FOREST);
		configuredFeature(TechnologicaConfiguredFeatures.TREES_MODIFIED_WOODED_HILLS);
		configuredFeature(TechnologicaConfiguredFeatures.TREES_MODIFIED_BEACH);
		configuredFeature(TechnologicaConfiguredFeatures.TREES_MODIFIED_TAIGA);
		configuredFeature(TechnologicaConfiguredFeatures.TREES_MODIFIED_SNOWY_TAIGA);
		configuredFeature(TechnologicaConfiguredFeatures.TREES_MODIFIED_SWAMP);
		configuredFeature(TechnologicaConfiguredFeatures.PATCH_BLACKBERRY_BUSH);
		configuredFeature(TechnologicaConfiguredFeatures.PATCH_BLUEBERRY_BUSH);
		configuredFeature(TechnologicaConfiguredFeatures.PATCH_RASPBERRY_BUSH);
		configuredFeature(TechnologicaConfiguredFeatures.PATCH_STRAWBERRY_BUSH);
		configuredFeature(TechnologicaConfiguredFeatures.PATCH_COTTON_BUSH);
		configuredFeature(TechnologicaConfiguredFeatures.PATCH_PEPPERCORN_BUSH);
		configuredFeature(TechnologicaConfiguredFeatures.NAVAL_MINE);
		configuredFeature(TechnologicaConfiguredFeatures.DEEP_KELP);
		configuredFeature(TechnologicaConfiguredFeatures.DEEP_SEAGRASS);
		configuredFeature(TechnologicaConfiguredFeatures.DEEP_BASALT_PILLAR);
		configuredFeature(TechnologicaConfiguredFeatures.HYDROTHERMAL_VENT);
		configuredFeature(TechnologicaConfiguredFeatures.DEEP_BASALT_BLOB);
	}
}
