package com.technologica.data.worldgen.placement;

import java.util.List;

import com.technologica.Technologica;
import com.technologica.world.entity.TechnologicaEntityType;
import com.technologica.world.level.block.TechnologicaBlocks;
import com.technologica.world.level.levelgen.feature.TechnologicaFeature;
import com.technologica.world.level.levelgen.feature.foliageplacers.ConicalFoliagePlacer;
import com.technologica.world.level.levelgen.feature.foliageplacers.DishFoliagePlacer;
import com.technologica.world.level.levelgen.feature.foliageplacers.PalmFoliagePlacer;
import com.technologica.world.level.levelgen.feature.foliageplacers.TeardropFoliagePlacer;

import net.minecraft.core.HolderSet;
import net.minecraft.core.RegistrySetBuilder;
import net.minecraft.core.registries.Registries;
import net.minecraft.data.worldgen.features.FeatureUtils;
import net.minecraft.data.worldgen.placement.PlacementUtils;
import net.minecraft.data.worldgen.placement.VegetationPlacements;
import net.minecraft.resources.ResourceKey;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.tags.BlockTags;
import net.minecraft.util.valueproviders.ConstantInt;
import net.minecraft.util.valueproviders.UniformInt;
import net.minecraft.world.level.biome.Biomes;
import net.minecraft.world.level.biome.MobSpawnSettings.SpawnerData;
import net.minecraft.world.level.block.Blocks;
import net.minecraft.world.level.block.CropBlock;
import net.minecraft.world.level.block.SweetBerryBushBlock;
import net.minecraft.world.level.levelgen.GenerationStep.Decoration;
import net.minecraft.world.level.levelgen.VerticalAnchor;
import net.minecraft.world.level.levelgen.feature.ConfiguredFeature;
import net.minecraft.world.level.levelgen.feature.Feature;
import net.minecraft.world.level.levelgen.feature.LakeFeature;
import net.minecraft.world.level.levelgen.feature.WeightedPlacedFeature;
import net.minecraft.world.level.levelgen.feature.configurations.BlockStateConfiguration;
import net.minecraft.world.level.levelgen.feature.configurations.OreConfiguration;
import net.minecraft.world.level.levelgen.feature.configurations.RandomFeatureConfiguration;
import net.minecraft.world.level.levelgen.feature.configurations.SimpleBlockConfiguration;
import net.minecraft.world.level.levelgen.feature.configurations.TreeConfiguration;
import net.minecraft.world.level.levelgen.feature.featuresize.TwoLayersFeatureSize;
import net.minecraft.world.level.levelgen.feature.foliageplacers.AcaciaFoliagePlacer;
import net.minecraft.world.level.levelgen.feature.foliageplacers.BlobFoliagePlacer;
import net.minecraft.world.level.levelgen.feature.foliageplacers.MegaPineFoliagePlacer;
import net.minecraft.world.level.levelgen.feature.stateproviders.BlockStateProvider;
import net.minecraft.world.level.levelgen.feature.trunkplacers.StraightTrunkPlacer;
import net.minecraft.world.level.levelgen.placement.BiomeFilter;
import net.minecraft.world.level.levelgen.placement.CountPlacement;
import net.minecraft.world.level.levelgen.placement.HeightRangePlacement;
import net.minecraft.world.level.levelgen.placement.InSquarePlacement;
import net.minecraft.world.level.levelgen.placement.PlacedFeature;
import net.minecraft.world.level.levelgen.placement.PlacementModifier;
import net.minecraft.world.level.levelgen.placement.RarityFilter;
import net.minecraft.world.level.levelgen.structure.templatesystem.BlockMatchTest;
import net.minecraft.world.level.levelgen.structure.templatesystem.RuleTest;
import net.minecraft.world.level.levelgen.structure.templatesystem.TagMatchTest;
import net.minecraftforge.common.world.BiomeModifier;
import net.minecraftforge.common.world.ForgeBiomeModifiers.AddFeaturesBiomeModifier;
import net.minecraftforge.common.world.ForgeBiomeModifiers.AddSpawnsBiomeModifier;
import net.minecraftforge.registries.ForgeRegistries;

@SuppressWarnings("deprecation")
public class TechnologicaMiscOverworldPlacements {
	public static final ResourceKey<ConfiguredFeature<?, ?>> BRINE_POOL_CONFIGURED = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "brine_pool"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> OASIS_CONFIGURED = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "oasis"));
	
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_SPODUMENE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_spodumene"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_BORAX = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_borax"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_MAGNESITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_magnesite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_BAUXITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_bauxite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_APATITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_apatite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_PHOSPHORITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_phosphorite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_GADOLINITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_gadolinite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_ILMENITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_ilmenite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_PATRONITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_patronite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_CHROMITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_chromite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_PYROLUSITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_pyrolusite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_COBALTITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_cobaltite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_GARNIERITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_garnierite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_ARSENOPYRITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_arsenopyrite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_CROOKESITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_crookesite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_LEPIDOLITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_lepidolite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_BASTNAESITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_bastnaesite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_TANTALITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_tantalite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_MOLYBDENITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_molybdenite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_PENTLANDITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_pentlandite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_ARGENTITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_argentite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_GALENA = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_galena"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_SYLVANITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_sylvanite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_CASSITERITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_cassiterite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_WOLFRAMITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_wolframite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_OSMIRIDIUM = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_osmiridium"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_PLATINUM = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_platinum"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_CINNABAR = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_cinnabar"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_THORIANITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_thorianite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_URANINITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_uraninite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_EMERALD = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_emerald"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_RUBY = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_ruby"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_SAPPHIRE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_sapphire"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_TOPAZ = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_topaz"));
	
	public static final ResourceKey<ConfiguredFeature<?, ?>> APRICOT = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "apricot"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ASPEN = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "aspen"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> AVOCADO = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "avocado"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> BANANA = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "banana"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> CHERRY = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "cherry"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> CHESTNUT = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "chestnut"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> CINNAMON = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "cinnamon"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> COCONUT = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "coconut"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> EBONY = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ebony"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> KIWI = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "kiwi"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> LEMON = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "lemon"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> LIME = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "lime"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> MAHOGANY = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "mahogany"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> MAPLE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "maple"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> OLIVE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "olive"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORANGE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "orange"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> PEACH = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "peach"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> PEAR = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "pear"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> PLUM = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "plum"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> REDWOOD = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "redwood"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ROSEWOOD = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "rosewood"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> RUBBER = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "rubber"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> TEAK = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "teak"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> WALNUT = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "walnut"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ZEBRAWOOD = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "zebrawood"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ANCIENT_AMBROSIA = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ancient_ambrosia"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> BENEVOLENT_APOTHECARY = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "benevolent_apothecary"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> CRYOGENIC_SPIRE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "cryogenic_spire"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> MALEVOLENT_APOTHECARY = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "malevolent_apothecary"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> NECROTIC = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "necrotic"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> SERENDIPITOUS_APOTHECARY = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "serendipitous_apothecary"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> THUNDEROUS_CONDUCTOR = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "thunderous_conductor"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> TOWERING_INFERNO = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "towering_inferno"));
	
	public static final ResourceKey<ConfiguredFeature<?, ?>> TREES_MODIFIED_JUNGLE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "trees_modified_savanna"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> TREES_MODIFIED_SAVANNA = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "trees_modified_jungle"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> TREES_MODIFIED_JUNGLE_EDGE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "trees_modified_jungle_edge"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> TREES_MODIFIED_BAMBOO_JUNGLE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "trees_modified_bamboo_jungle"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> TREES_MODIFIED_FOREST = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "trees_modified_forest"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> TREES_MODIFIED_BIRCH_FOREST = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "trees_modified_birch_forest"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> TREES_MODIFIED_WOODED_HILLS = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "trees_modified_wooded_hills"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> TREES_MODIFIED_BEACH = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "trees_modified_beach"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> TREES_MODIFIED_TAIGA = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "trees_modified_taiga"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> TREES_MODIFIED_SNOWY_TAIGA = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "trees_modified_snowy_taiga"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> TREES_MODIFIED_SWAMP = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "trees_modified_swamp"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> PATCH_BLACKBERRY_BUSH = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "patch_blackberry_bush"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> PATCH_BLUEBERRY_BUSH = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "patch_blueberry_bush"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> PATCH_RASPBERRY_BUSH = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "patch_raspberry_bush"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> PATCH_STRAWBERRY_BUSH = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "patch_strawberry_bush"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> PATCH_COTTON_BUSH = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "patch_cotton_bush"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> PATCH_PEPPERCORN_BUSH = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "patch_peppercorn_bush"));
	
	public static final ResourceKey<PlacedFeature> BRINE_POOL_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "brine_pool"));
	public static final ResourceKey<PlacedFeature> OASIS_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "oasis"));
	
	public static final ResourceKey<PlacedFeature> ORE_SPODUMENE_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_spodumene"));
	public static final ResourceKey<PlacedFeature> ORE_BORAX_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_borax"));
	public static final ResourceKey<PlacedFeature> ORE_MAGNESITE_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_magnesite"));
	public static final ResourceKey<PlacedFeature> ORE_BAUXITE_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_bauxite"));
	public static final ResourceKey<PlacedFeature> ORE_APATITE_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_apatite"));
	public static final ResourceKey<PlacedFeature> ORE_PHOSPHORITE_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_phosphorite"));
	public static final ResourceKey<PlacedFeature> ORE_GADOLINITE_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_gadolinite"));
	public static final ResourceKey<PlacedFeature> ORE_ILMENITE_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_ilmenite"));
	public static final ResourceKey<PlacedFeature> ORE_PATRONITE_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_patronite"));
	public static final ResourceKey<PlacedFeature> ORE_CHROMITE_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_chromite"));
	public static final ResourceKey<PlacedFeature> ORE_PYROLUSITE_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_pyrolusite"));
	public static final ResourceKey<PlacedFeature> ORE_COBALTITE_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_cobaltite"));
	public static final ResourceKey<PlacedFeature> ORE_GARNIERITE_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_garnierite"));
	public static final ResourceKey<PlacedFeature> ORE_ARSENOPYRITE_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_arsenopyrite"));
	public static final ResourceKey<PlacedFeature> ORE_CROOKESITE_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_crookesite"));
	public static final ResourceKey<PlacedFeature> ORE_LEPIDOLITE_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_lepidolite"));
	public static final ResourceKey<PlacedFeature> ORE_BASTNAESITE_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_bastnaesite"));
	public static final ResourceKey<PlacedFeature> ORE_TANTALITE_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_tantalite"));
	public static final ResourceKey<PlacedFeature> ORE_MOLYBDENITE_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_molybdenite"));
	public static final ResourceKey<PlacedFeature> ORE_PENTLANDITE_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_pentlandite"));
	public static final ResourceKey<PlacedFeature> ORE_ARGENTITE_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_argentite"));
	public static final ResourceKey<PlacedFeature> ORE_GALENA_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_galena"));
	public static final ResourceKey<PlacedFeature> ORE_SYLVANITE_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_sylvanite"));
	public static final ResourceKey<PlacedFeature> ORE_CASSITERITE_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_cassiterite"));
	public static final ResourceKey<PlacedFeature> ORE_WOLFRAMITE_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_wolframite"));
	public static final ResourceKey<PlacedFeature> ORE_OSMIRIDIUM_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_osmiridium"));
	public static final ResourceKey<PlacedFeature> ORE_PLATINUM_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_platinum"));
	public static final ResourceKey<PlacedFeature> ORE_CINNABAR_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_cinnabar"));
	public static final ResourceKey<PlacedFeature> ORE_THORIANITE_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_thorianite"));
	public static final ResourceKey<PlacedFeature> ORE_URANINITE_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_uraninite"));
	public static final ResourceKey<PlacedFeature> ORE_EMERALD_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_emerald"));
	public static final ResourceKey<PlacedFeature> ORE_RUBY_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_ruby"));
	public static final ResourceKey<PlacedFeature> ORE_SAPPHIRE_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_sapphire"));
	public static final ResourceKey<PlacedFeature> ORE_TOPAZ_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_topaz"));
	
	private static final ResourceKey<PlacedFeature> APRICOT_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "apricot_checked"));
	private static final ResourceKey<PlacedFeature> ASPEN_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "aspen_checked"));
	private static final ResourceKey<PlacedFeature> AVOCADO_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "avocado_checked"));
	private static final ResourceKey<PlacedFeature> BANANA_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "banana_checked"));
	private static final ResourceKey<PlacedFeature> CHERRY_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "cherry_checked"));	
	private static final ResourceKey<PlacedFeature> CHESTNUT_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "chestnut_checked"));
	private static final ResourceKey<PlacedFeature> CINNAMON_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "cinnamon_checked"));
	private static final ResourceKey<PlacedFeature> COCONUT_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "coconut_checked"));
	private static final ResourceKey<PlacedFeature> EBONY_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "ebony_checked"));
	private static final ResourceKey<PlacedFeature> KIWI_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "kiwi_checked"));
	private static final ResourceKey<PlacedFeature> LEMON_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "lemon_checked"));
	private static final ResourceKey<PlacedFeature> LIME_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "lime_checked"));
	private static final ResourceKey<PlacedFeature> MAHOGANY_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "mahogany_checked"));
	private static final ResourceKey<PlacedFeature> MAPLE_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "maple_checked"));
	private static final ResourceKey<PlacedFeature> OLIVE_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "olive_checked"));
	private static final ResourceKey<PlacedFeature> ORANGE_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "orange_checked"));
	private static final ResourceKey<PlacedFeature> PEACH_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "peach_checked"));
	private static final ResourceKey<PlacedFeature> PEAR_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "pear_checked"));
	private static final ResourceKey<PlacedFeature> PLUM_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "pulm_checked"));
	private static final ResourceKey<PlacedFeature> REDWOOD_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "redwood_checked"));
	private static final ResourceKey<PlacedFeature> ROSEWOOD_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "rosewood_checked"));
	private static final ResourceKey<PlacedFeature> RUBBER_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "rubber_checked"));
	private static final ResourceKey<PlacedFeature> TEAK_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "teak_checked"));
	private static final ResourceKey<PlacedFeature> WALNUT_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "walnut_checked"));
	private static final ResourceKey<PlacedFeature> ZEBRAWOOD_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "zebrawood_checked"));
	private static final ResourceKey<PlacedFeature> ANCIENT_AMBROSIA_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "ancient_ambrosia_checked"));
	private static final ResourceKey<PlacedFeature> BENEVOLENT_APOTHECARY_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "benevolent_apothecary_checked"));
	private static final ResourceKey<PlacedFeature> CRYOGENIC_SPIRE_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "cryogenic_spire_checked"));
	private static final ResourceKey<PlacedFeature> MALEVOLENT_APOTHECARY_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "malevolent_apothecary_checked"));
	private static final ResourceKey<PlacedFeature> NECROTIC_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "necrotic_checked"));
	private static final ResourceKey<PlacedFeature> SERENDIPITOUS_APOTHECARY_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "serendipitous_apothecary_checked"));
	private static final ResourceKey<PlacedFeature> THUNDEROUS_CONDUCTOR_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "thunderous_conductor_checked"));
	private static final ResourceKey<PlacedFeature> TOWERING_INFERNO_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "towering_inferno_checked"));
	
	private static final ResourceKey<PlacedFeature> TREES_MODIFIED_SAVANNA_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "trees_zebrawood"));
	private static final ResourceKey<PlacedFeature> TREES_MODIFIED_JUNGLE_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "trees_modified_jungle"));
	private static final ResourceKey<PlacedFeature> TREES_MODIFIED_JUNGLE_EDGE_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "trees_teak"));
	private static final ResourceKey<PlacedFeature> TREES_MODIFIED_BAMBOO_JUNGLE_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "trees_bamboo_jungle"));
	private static final ResourceKey<PlacedFeature> TREES_MODIFIED_FOREST_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "trees_chestnut"));
	private static final ResourceKey<PlacedFeature> TREES_MODIFIED_BIRCH_FOREST_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "trees_peach"));
	private static final ResourceKey<PlacedFeature> TREES_MODIFIED_WOODED_HILLS_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "trees_aspen"));
	private static final ResourceKey<PlacedFeature> TREES_MODIFIED_BEACH_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "trees_coconut"));
	private static final ResourceKey<PlacedFeature> TREES_MODIFIED_TAIGA_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "trees_modified_taiga"));
	private static final ResourceKey<PlacedFeature> TREES_MODIFIED_SNOWY_TAIGA_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "trees_snowy_taiga"));
	private static final ResourceKey<PlacedFeature> TREES_MODIFIED_SWAMP_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "trees_orange"));
	private static final ResourceKey<PlacedFeature> PATCH_BLACKBERRY_COMMON_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "patch_blackberry_common"));
	private static final ResourceKey<PlacedFeature> PATCH_BLACKBERRY_RARE_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "patch_blackberry_rare"));
	private static final ResourceKey<PlacedFeature> PATCH_BLUEBERRY_COMMON_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "patch_blueberry_common"));
	private static final ResourceKey<PlacedFeature> PATCH_BLUEBERRY_RARE_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "patch_blueberry_rare"));
	private static final ResourceKey<PlacedFeature> PATCH_RASPBERRY_COMMON_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "patch_raspberry_common"));
	private static final ResourceKey<PlacedFeature> PATCH_RASPBERRY_RARE_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "patch_raspberry_rare"));
	private static final ResourceKey<PlacedFeature> PATCH_STRAWBERRY_COMMON_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "patch_strawberry_common"));
	private static final ResourceKey<PlacedFeature> PATCH_STRAWBERRY_RARE_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "patch_strawberry_rare"));
	private static final ResourceKey<PlacedFeature> PATCH_COTTON_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "patch_cotton"));
	private static final ResourceKey<PlacedFeature> PATCH_PEPPERCORNS_PLACED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "patch_peppercorns"));
	
	private static final ResourceKey<PlacedFeature> PATCH_BLACKBERRY_BUSH_VILLAGE = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "patch_blackberry_bush"));
	private static final ResourceKey<PlacedFeature> PATCH_BLUEBERRY_BUSH_VILLAGE = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "patch_blueberry_bush"));
	private static final ResourceKey<PlacedFeature> PATCH_RASPBERRY_BUSH_VILLAGE = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "patch_raspberry_bush"));
	private static final ResourceKey<PlacedFeature> PATCH_STRAWBERRY_BUSH_VILLAGE = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "patch_strawberry_bush"));

	private static final ResourceKey<BiomeModifier> BADLANDS_FLUID_SPRINGS = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "badlands_fluid_springs"));
	private static final ResourceKey<BiomeModifier> DESERT_FLUID_SPRINGS = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "desert_fluid_springs"));
	
	private static final ResourceKey<BiomeModifier> BADLANDS_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "badlands_underground_ores"));
	private static final ResourceKey<BiomeModifier> BAMBOO_JUNGLE_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "bamboo_jungle_underground_ores"));
	private static final ResourceKey<BiomeModifier> BEACH_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "beach_underground_ores"));
	private static final ResourceKey<BiomeModifier> BIRCH_FOREST_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "birch_forest_underground_ores"));
	private static final ResourceKey<BiomeModifier> COLD_OCEAN_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "cold_ocean_underground_ores"));
	private static final ResourceKey<BiomeModifier> DARK_FOREST_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "dark_forest_underground_ores"));
	private static final ResourceKey<BiomeModifier> DEEP_COLD_OCEAN_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "deep_cold_ocean_underground_ores"));
	private static final ResourceKey<BiomeModifier> DEEP_DARK_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "deep_dark_underground_ores"));
	private static final ResourceKey<BiomeModifier> DEEP_FROZEN_OCEAN_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "deep_frozen_ocean_underground_ores"));
	private static final ResourceKey<BiomeModifier> DEEP_LUKEWARM_OCEAN_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "deep_lukewarm_ocean_underground_ores"));
	private static final ResourceKey<BiomeModifier> DEEP_OCEAN_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "deep_ocean_underground_ores"));
	private static final ResourceKey<BiomeModifier> DESERT_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "desert_underground_ores"));
	private static final ResourceKey<BiomeModifier> DRIPSTONE_CAVES_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "dripstone_caves_underground_ores"));
	private static final ResourceKey<BiomeModifier> ERODED_BADLANDS_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "eroded_badlands_underground_ores"));
	private static final ResourceKey<BiomeModifier> FLOWER_FOREST_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "flower_forest_underground_ores"));
	private static final ResourceKey<BiomeModifier> FOREST_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "forest_underground_ores"));
	private static final ResourceKey<BiomeModifier> FROZEN_OCEAN_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "frozen_ocean_underground_ores"));
	private static final ResourceKey<BiomeModifier> FROZEN_PEAKS_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "frozen_peaks_underground_ores"));
	private static final ResourceKey<BiomeModifier> FROZEN_RIVER_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "frozen_river_underground_ores"));
	private static final ResourceKey<BiomeModifier> GROVE_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "grove_underground_ores"));
	private static final ResourceKey<BiomeModifier> ICE_SPIKES_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "ice_spikes_underground_ores"));
	private static final ResourceKey<BiomeModifier> JAGGED_PEAKS_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "jagged_peaks_underground_ores"));
	private static final ResourceKey<BiomeModifier> JUNGLE_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "jungle_underground_ores"));
	private static final ResourceKey<BiomeModifier> LUKEWARM_OCEAN_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "lukewarm_ocean_underground_ores"));
	private static final ResourceKey<BiomeModifier> LUSH_CAVES_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "lush_caves_underground_ores"));
	private static final ResourceKey<BiomeModifier> MANGROVE_SWAMP_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "mangrove_swamp_underground_ores"));
	private static final ResourceKey<BiomeModifier> MEADOW_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "meadow_underground_ores"));
	private static final ResourceKey<BiomeModifier> MUSHROOM_FIELDS_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "mushroom_fields_underground_ores"));
	private static final ResourceKey<BiomeModifier> OCEAN_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "ocean_underground_ores"));
	private static final ResourceKey<BiomeModifier> OLD_GROWTH_BIRCH_FOREST_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "old_growth_brich_forest_underground_ores"));
	private static final ResourceKey<BiomeModifier> OLD_GROWTH_PINE_TAIGA_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "old_growth_pine_taiga_underground_ores"));
	private static final ResourceKey<BiomeModifier> OLD_GROWTH_SPRUCE_TAIGA_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "old_growth_spruce_taiga_underground_ores"));
	private static final ResourceKey<BiomeModifier> PLAINS_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "plains_underground_ores"));
	private static final ResourceKey<BiomeModifier> RIVER_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "river_underground_ores"));
	private static final ResourceKey<BiomeModifier> SAVANNA_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "savanna_underground_ores"));
	private static final ResourceKey<BiomeModifier> SAVANNA_PLATEAU_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "savanna_plateau_underground_ores"));
	private static final ResourceKey<BiomeModifier> SNOWY_BEACH_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "snowy_beach_underground_ores"));
	private static final ResourceKey<BiomeModifier> SNOWY_PLAINS_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "snowy_plains_underground_ores"));
	private static final ResourceKey<BiomeModifier> SNOWY_SLOPES_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "snowy_slopes_underground_ores"));
	private static final ResourceKey<BiomeModifier> SNOWY_TAIGA_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "snowy_taiga_underground_ores"));
	private static final ResourceKey<BiomeModifier> SPARSE_JUNGLE_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "sparse_jungle_underground_ores"));
	private static final ResourceKey<BiomeModifier> STONY_PEAKS_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "stony_peaks_underground_ores"));
	private static final ResourceKey<BiomeModifier> STONY_SHORE_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "stony_shore_underground_ores"));
	private static final ResourceKey<BiomeModifier> SUNFLOWER_PLAINS_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "sunflower_plains_underground_ores"));
	private static final ResourceKey<BiomeModifier> SWAMP_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "swamp_underground_ores"));
	private static final ResourceKey<BiomeModifier> TAIGA_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "taiga_underground_ores"));
	private static final ResourceKey<BiomeModifier> WARM_OCEAN_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "warm_ocean_underground_ores"));
	private static final ResourceKey<BiomeModifier> WINDSWEPT_FOREST_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "windswept_forest_underground_ores"));
	private static final ResourceKey<BiomeModifier> WINDSWEPT_GRAVELLY_HILLS_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "windswept_gravelly_hills_underground_ores"));
	private static final ResourceKey<BiomeModifier> WINDSWEPT_HILLS_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "windswept_hills_underground_ores"));
	private static final ResourceKey<BiomeModifier> WINDSWEPT_SAVANNA_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "windswept_savanna_underground_ores"));
	private static final ResourceKey<BiomeModifier> WOODED_BADLANDS_UNDERGROUND_ORES = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "wooded_badlands_underground_ores"));
	
	private static final ResourceKey<BiomeModifier> BAMBOO_JUNGLE_VEGETATION = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "bamboo_jungle_vegetation"));
	private static final ResourceKey<BiomeModifier> BEACH_VEGETATION = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "beach_vegetation"));
	private static final ResourceKey<BiomeModifier> BIRCH_FOREST_VEGETATION = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "birch_forest_vegetation"));
	private static final ResourceKey<BiomeModifier> FOREST_VEGETATION = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "forest_vegetation"));
	private static final ResourceKey<BiomeModifier> JUNGLE_VEGETATION = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "jungle_vegetation"));
	private static final ResourceKey<BiomeModifier> OLD_GROWTH_PINE_TAIGA_VEGETATION = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "old_growth_pine_taiga_vegetation"));
	private static final ResourceKey<BiomeModifier> OLD_GROWTH_SPRUCE_TAIGA_VEGETATION = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "old_growth_spruce_taiga_vegetation"));
	private static final ResourceKey<BiomeModifier> PLAINS_VEGETATION = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "plains_vegetation"));
	private static final ResourceKey<BiomeModifier> SAVANNA_VEGETATION = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "savanna_vegetation"));
	private static final ResourceKey<BiomeModifier> SNOWY_SLOPES_VEGETATION = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "snowy_slopes_vegetation"));
	private static final ResourceKey<BiomeModifier> SNOWY_TAIGA_VEGETATION = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "snowy_taiga_vegetation"));
	private static final ResourceKey<BiomeModifier> SPARSE_JUNGLE_VEGETATION = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "sparse_jungle_vegetation"));
	private static final ResourceKey<BiomeModifier> STONY_PEAKS_VEGETATION = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "stony_peaks_vegetation"));
	private static final ResourceKey<BiomeModifier> SWAMP_VEGETATION = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "swamp_vegetation"));
	private static final ResourceKey<BiomeModifier> TAIGA_VEGETATION = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "taiga_vegetation"));
	private static final ResourceKey<BiomeModifier> WINDSWEPT_FOREST_VEGETATION = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "windswept_forest_vegetation"));
	private static final ResourceKey<BiomeModifier> WINDSWEPT_HILLS_VEGETATION = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "windswept_hills_vegetation"));
	
	private static final ResourceKey<BiomeModifier> BADLANDS_SPAWNS = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "badlands_spawns"));
	private static final ResourceKey<BiomeModifier> BEACH_SPAWNS = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "beach_spawns"));
	private static final ResourceKey<BiomeModifier> BIRCH_FOREST_SPAWNS = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "birch_forest_spawns"));
	private static final ResourceKey<BiomeModifier> DESERT_SPAWNS = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "desert_spawns"));
	private static final ResourceKey<BiomeModifier> FOREST_SPAWNS = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "forest_spawns"));
	private static final ResourceKey<BiomeModifier> FROZEN_OCEAN_SPAWNS = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "frozen_ocean_spawns"));
	private static final ResourceKey<BiomeModifier> ICE_SPIKES_SPAWNS = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "ice_spikes_spawns"));
	private static final ResourceKey<BiomeModifier> JUNGLE_SPAWNS = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "jungle_spawns"));
	private static final ResourceKey<BiomeModifier> MANGROVE_SWAMP_SPAWNS = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "mangrove_swamp_spawns"));
	private static final ResourceKey<BiomeModifier> OCEAN_SPAWNS = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "ocean_spawns"));
	private static final ResourceKey<BiomeModifier> PLAINS_SPAWNS = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "plains_spawns"));
	private static final ResourceKey<BiomeModifier> RIVER_SPAWNS = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "river_spawns"));
	private static final ResourceKey<BiomeModifier> SAVANNA_SPAWNS = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "savanna_spawns"));
	private static final ResourceKey<BiomeModifier> SNOWY_SLOPES_SPAWNS = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "snowy_slopes_spawns"));
	private static final ResourceKey<BiomeModifier> SNOWY_TAIGA_SPAWNS = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "snowy_tagia_spawns"));
	private static final ResourceKey<BiomeModifier> STONY_PEAKS_SPAWNS = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "stony_peaks_spawns"));
	private static final ResourceKey<BiomeModifier> SWAMP_SPAWNS = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "swamp_spawns"));
	private static final ResourceKey<BiomeModifier> TAIGA_SPAWNS = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "tagia_spawns"));
	private static final ResourceKey<BiomeModifier> WARM_OCEAN_SPAWNS = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "warm_ocean_spawns"));
	private static final ResourceKey<BiomeModifier> WINDSWEPT_FOREST_SPAWNS = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "windswept_forest_spawns"));
	private static final ResourceKey<BiomeModifier> WINDSWEPT_HILLS_SPAWNS = ResourceKey.create(ForgeRegistries.Keys.BIOME_MODIFIERS, new ResourceLocation(Technologica.MODID, "windswept_hills_spawns"));
	
	static RuleTest ruletest = new TagMatchTest(BlockTags.BASE_STONE_OVERWORLD);
	static RuleTest ruletest1 = new TagMatchTest(BlockTags.STONE_ORE_REPLACEABLES);
	static RuleTest ruletest2 = new TagMatchTest(BlockTags.DEEPSLATE_ORE_REPLACEABLES);
	static RuleTest ruletest3 = new BlockMatchTest(Blocks.NETHERRACK);
	static RuleTest ruletest4 = new TagMatchTest(BlockTags.BASE_STONE_NETHER);

	static List<OreConfiguration.TargetBlockState> ORE_SPODUMENE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.SPODUMENE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_SPODUMENE_ORE.get().defaultBlockState()));
	static List<OreConfiguration.TargetBlockState> ORE_BORAX_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.BORAX_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_BORAX_ORE.get().defaultBlockState()));
	static List<OreConfiguration.TargetBlockState> ORE_MAGNESITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.MAGNESITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_MAGNESITE_ORE.get().defaultBlockState()));
	static List<OreConfiguration.TargetBlockState> ORE_BAUXITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.BAUXITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_BAUXITE_ORE.get().defaultBlockState()));
	static List<OreConfiguration.TargetBlockState> ORE_APATITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.APATITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_APATITE_ORE.get().defaultBlockState()));
	static List<OreConfiguration.TargetBlockState> ORE_PHOSPHORITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.PHOSPHORITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_PHOSPHORITE_ORE.get().defaultBlockState()));
	static List<OreConfiguration.TargetBlockState> ORE_GADOLINITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.GADOLINITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_GADOLINITE_ORE.get().defaultBlockState()));
	static List<OreConfiguration.TargetBlockState> ORE_ILMENITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.ILMENITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_ILMENITE_ORE.get().defaultBlockState()));
	static List<OreConfiguration.TargetBlockState> ORE_PATRONITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.PATRONITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_PATRONITE_ORE.get().defaultBlockState()));
	static List<OreConfiguration.TargetBlockState> ORE_CHROMITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.CHROMITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_CHROMITE_ORE.get().defaultBlockState()));
	static List<OreConfiguration.TargetBlockState> ORE_PYROLUSITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.PYROLUSITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_PYROLUSITE_ORE.get().defaultBlockState()));
	static List<OreConfiguration.TargetBlockState> ORE_COBALTITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.COBALTITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_COBALTITE_ORE.get().defaultBlockState()));
	static List<OreConfiguration.TargetBlockState> ORE_GARNIERITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.GARNIERITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_GARNIERITE_ORE.get().defaultBlockState()));
	static List<OreConfiguration.TargetBlockState> ORE_ARSENOPYRITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.ARSENOPYRITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_ARSENOPYRITE_ORE.get().defaultBlockState()));
	static List<OreConfiguration.TargetBlockState> ORE_CROOKESITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.CROOKESITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_CROOKESITE_ORE.get().defaultBlockState()));
	static List<OreConfiguration.TargetBlockState> ORE_LEPIDOLITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.LEPIDOLITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_LEPIDOLITE_ORE.get().defaultBlockState()));
	static List<OreConfiguration.TargetBlockState> ORE_BASTNAESITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.BASTNAESITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_BASTNAESITE_ORE.get().defaultBlockState()));
	static List<OreConfiguration.TargetBlockState> ORE_TANTALITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.TANTALITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_TANTALITE_ORE.get().defaultBlockState()));
	static List<OreConfiguration.TargetBlockState> ORE_MOLYBDENITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.MOLYBDENITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_MOLYBDENITE_ORE.get().defaultBlockState()));
	static List<OreConfiguration.TargetBlockState> ORE_PENTLANDITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.PENTLANDITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_PENTLANDITE_ORE.get().defaultBlockState()));
	static List<OreConfiguration.TargetBlockState> ORE_ARGENTITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.ARGENTITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_ARGENTITE_ORE.get().defaultBlockState()));
	static List<OreConfiguration.TargetBlockState> ORE_GALENA_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.GALENA_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_GALENA_ORE.get().defaultBlockState()));
	static List<OreConfiguration.TargetBlockState> ORE_SYLVANITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.SYLVANITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_SYLVANITE_ORE.get().defaultBlockState()));
	static List<OreConfiguration.TargetBlockState> ORE_CASSITERITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.CASSITERITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_CASSITERITE_ORE.get().defaultBlockState()));
	static List<OreConfiguration.TargetBlockState> ORE_WOLFRAMITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.WOLFRAMITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_WOLFRAMITE_ORE.get().defaultBlockState()));
	static List<OreConfiguration.TargetBlockState> ORE_OSMIRIDIUM_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.OSMIRIDIUM_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_OSMIRIDIUM_ORE.get().defaultBlockState()));
	static List<OreConfiguration.TargetBlockState> ORE_PLATINUM_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.PLATINUM_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_PLATINUM_ORE.get().defaultBlockState()));
	static List<OreConfiguration.TargetBlockState> ORE_CINNABAR_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.CINNABAR_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_CINNABAR_ORE.get().defaultBlockState()));
	static List<OreConfiguration.TargetBlockState> ORE_THORIANITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.THORIANITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_THORIANITE_ORE.get().defaultBlockState()));
	static List<OreConfiguration.TargetBlockState> ORE_URANINITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.URANINITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_URANINITE_ORE.get().defaultBlockState()));
	static List<OreConfiguration.TargetBlockState> ORE_EMERALD_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, Blocks.EMERALD_ORE.defaultBlockState()), OreConfiguration.target(ruletest2, Blocks.DEEPSLATE_EMERALD_ORE.defaultBlockState()));
	static List<OreConfiguration.TargetBlockState> ORE_RUBY_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.RUBY_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_RUBY_ORE.get().defaultBlockState()));
	static List<OreConfiguration.TargetBlockState> ORE_SAPPHIRE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.SAPPHIRE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_SAPPHIRE_ORE.get().defaultBlockState()));
	static List<OreConfiguration.TargetBlockState> ORE_TOPAZ_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.TOPAZ_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_TOPAZ_ORE.get().defaultBlockState()));
	
	@SuppressWarnings({ "rawtypes", "unchecked" })
	public static final RegistrySetBuilder BUILDER = new RegistrySetBuilder()
			.add(Registries.CONFIGURED_FEATURE, context -> {
				context.register(BRINE_POOL_CONFIGURED, new ConfiguredFeature(TechnologicaFeature.BRINE_POOL.get(), new LakeFeature.Configuration(BlockStateProvider.simple(TechnologicaBlocks.BRINE.get().defaultBlockState()), BlockStateProvider.simple(TechnologicaBlocks.LITHIUM_CLAY.get().defaultBlockState()))));
				context.register(OASIS_CONFIGURED, new ConfiguredFeature(TechnologicaFeature.OASIS.get(), new BlockStateConfiguration(Blocks.WATER.defaultBlockState())));
				context.register(ORE_SPODUMENE, new ConfiguredFeature(TechnologicaFeature.POLLUCITE_DECORATED_ORE.get(), new OreConfiguration(ORE_SPODUMENE_TARGET_LIST, 8)));
				context.register(ORE_BORAX, new ConfiguredFeature(TechnologicaFeature.ULEXITE_DECORATED_ORE.get(), new OreConfiguration(ORE_BORAX_TARGET_LIST, 8)));
				context.register(ORE_MAGNESITE, new ConfiguredFeature(TechnologicaFeature.DOLOMITE_DECORATED_ORE.get(), new OreConfiguration(ORE_MAGNESITE_TARGET_LIST, 8)));
				context.register(ORE_BAUXITE, new ConfiguredFeature(Feature.ORE, new OreConfiguration(ORE_BAUXITE_TARGET_LIST, 8)));
				context.register(ORE_APATITE, new ConfiguredFeature(TechnologicaFeature.FLUORITE_DECORATED_ORE.get(), new OreConfiguration(ORE_APATITE_TARGET_LIST, 8)));
				context.register(ORE_PHOSPHORITE, new ConfiguredFeature(TechnologicaFeature.CELESTINE_DECORATED_ORE.get(), new OreConfiguration(ORE_PHOSPHORITE_TARGET_LIST, 8)));
				context.register(ORE_GADOLINITE, new ConfiguredFeature(TechnologicaFeature.XENOTIME_DECORATED_ORE.get(), new OreConfiguration(ORE_GADOLINITE_TARGET_LIST, 4)));
				context.register(ORE_ILMENITE, new ConfiguredFeature(TechnologicaFeature.RUTILE_DECORATED_ORE.get(), new OreConfiguration(ORE_ILMENITE_TARGET_LIST, 8)));
				context.register(ORE_PATRONITE, new ConfiguredFeature(TechnologicaFeature.VANADANITE_DECORATED_ORE.get(), new OreConfiguration(ORE_PATRONITE_TARGET_LIST, 8)));
				context.register(ORE_CHROMITE, new ConfiguredFeature(TechnologicaFeature.ZIRCON_DECORATED_ORE.get(), new OreConfiguration(ORE_CHROMITE_TARGET_LIST, 8)));
				context.register(ORE_PYROLUSITE, new ConfiguredFeature(Feature.ORE, new OreConfiguration(ORE_PYROLUSITE_TARGET_LIST, 8)));
				context.register(ORE_COBALTITE, new ConfiguredFeature(Feature.ORE, new OreConfiguration(ORE_COBALTITE_TARGET_LIST, 8)));
				context.register(ORE_GARNIERITE, new ConfiguredFeature(Feature.ORE, new OreConfiguration(ORE_GARNIERITE_TARGET_LIST, 8)));
				context.register(ORE_ARSENOPYRITE, new ConfiguredFeature(TechnologicaFeature.SPHALERITE_DECORATED_ORE.get(), new OreConfiguration(ORE_ARSENOPYRITE_TARGET_LIST, 8)));
				context.register(ORE_CROOKESITE, new ConfiguredFeature(TechnologicaFeature.HUTCHINSONITE_DECORATED_ORE.get(), new OreConfiguration(ORE_CROOKESITE_TARGET_LIST, 8)));
				context.register(ORE_LEPIDOLITE, new ConfiguredFeature(TechnologicaFeature.STRONTIANITE_DECORATED_ORE.get(), new OreConfiguration(ORE_LEPIDOLITE_TARGET_LIST, 8)));
				context.register(ORE_BASTNAESITE, new ConfiguredFeature(TechnologicaFeature.MONAZITE_DECORATED_ORE.get(), new OreConfiguration(ORE_BASTNAESITE_TARGET_LIST, 4)));
				context.register(ORE_TANTALITE, new ConfiguredFeature(TechnologicaFeature.COLUMBITE_DECORATED_ORE.get(), new OreConfiguration(ORE_TANTALITE_TARGET_LIST, 4)));
				context.register(ORE_MOLYBDENITE, new ConfiguredFeature(TechnologicaFeature.WULFENITE_DECORATED_ORE.get(), new OreConfiguration(ORE_MOLYBDENITE_TARGET_LIST, 8)));
				context.register(ORE_PENTLANDITE, new ConfiguredFeature(Feature.ORE, new OreConfiguration(ORE_PENTLANDITE_TARGET_LIST, 8)));
				context.register(ORE_ARGENTITE, new ConfiguredFeature(Feature.ORE, new OreConfiguration(ORE_ARGENTITE_TARGET_LIST, 8)));
				context.register(ORE_GALENA, new ConfiguredFeature(TechnologicaFeature.BARYTE_DECORATED_ORE.get(), new OreConfiguration(ORE_GALENA_TARGET_LIST, 8)));
				context.register(ORE_SYLVANITE, new ConfiguredFeature(TechnologicaFeature.TELLURITE_DECORATED_ORE.get(), new OreConfiguration(ORE_SYLVANITE_TARGET_LIST, 4)));
				context.register(ORE_CASSITERITE, new ConfiguredFeature(TechnologicaFeature.BISMITHUNITE_DECORATED_ORE.get(), new OreConfiguration(ORE_CASSITERITE_TARGET_LIST, 8)));
				context.register(ORE_WOLFRAMITE, new ConfiguredFeature(TechnologicaFeature.SCHEELITE_DECORATED_ORE.get(), new OreConfiguration(ORE_WOLFRAMITE_TARGET_LIST, 8)));
				context.register(ORE_OSMIRIDIUM, new ConfiguredFeature(Feature.ORE, new OreConfiguration(ORE_OSMIRIDIUM_TARGET_LIST, 4)));
				context.register(ORE_PLATINUM, new ConfiguredFeature(Feature.ORE, new OreConfiguration(ORE_PLATINUM_TARGET_LIST, 4)));
				context.register(ORE_CINNABAR, new ConfiguredFeature(TechnologicaFeature.STIBNITE_DECORATED_ORE.get(), new OreConfiguration(ORE_CINNABAR_TARGET_LIST, 8)));
				context.register(ORE_THORIANITE, new ConfiguredFeature(TechnologicaFeature.AUTUNITE_DECORATED_ORE.get(), new OreConfiguration(ORE_THORIANITE_TARGET_LIST, 8)));
				context.register(ORE_URANINITE, new ConfiguredFeature(TechnologicaFeature.AUTUNITE_DECORATED_ORE.get(), new OreConfiguration(ORE_URANINITE_TARGET_LIST, 8)));
				context.register(ORE_EMERALD, new ConfiguredFeature(TechnologicaFeature.AQUAMARINE_DECORATED_ORE.get(), new OreConfiguration(ORE_EMERALD_TARGET_LIST, 3)));
				context.register(ORE_RUBY, new ConfiguredFeature(Feature.ORE, new OreConfiguration(ORE_RUBY_TARGET_LIST, 3)));
				context.register(ORE_SAPPHIRE, new ConfiguredFeature(Feature.ORE, new OreConfiguration(ORE_SAPPHIRE_TARGET_LIST, 3)));
				context.register(ORE_TOPAZ, new ConfiguredFeature(Feature.ORE, new OreConfiguration(ORE_TOPAZ_TARGET_LIST, 3)));
				context.register(APRICOT, new ConfiguredFeature(Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.APRICOT_LOG.get().defaultBlockState()), new StraightTrunkPlacer(4, 1, 0), BlockStateProvider.simple(TechnologicaBlocks.APRICOT_LEAVES.get().defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(0), ConstantInt.of(0)), new TwoLayersFeatureSize(1, 0, 2)).ignoreVines().build()));
				context.register(ASPEN, new ConfiguredFeature(Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.ASPEN_LOG.get().defaultBlockState()), new StraightTrunkPlacer(6, 2, 0), BlockStateProvider.simple(TechnologicaBlocks.ASPEN_LEAVES.get().defaultBlockState()), new TeardropFoliagePlacer(ConstantInt.of(2), ConstantInt.of(0), 6), new TwoLayersFeatureSize(1, 0, 1)).ignoreVines().build()));
				context.register(AVOCADO, new ConfiguredFeature(Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.AVOCADO_LOG.get().defaultBlockState()), new StraightTrunkPlacer(4, 1, 0), BlockStateProvider.simple(TechnologicaBlocks.AVOCADO_LEAVES.get().defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(0), ConstantInt.of(0)), new TwoLayersFeatureSize(1, 0, 2)).ignoreVines().build()));
				context.register(BANANA, new ConfiguredFeature(Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.BANANA_LOG.get().defaultBlockState()), new StraightTrunkPlacer(5, 2, 0), BlockStateProvider.simple(TechnologicaBlocks.BANANA_LEAVES.get().defaultBlockState()), new PalmFoliagePlacer(ConstantInt.of(4), ConstantInt.of(1)), new TwoLayersFeatureSize(1, 0, 1)).ignoreVines().build()));
				context.register(CHERRY, new ConfiguredFeature(Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.CHERRY_LOG.get().defaultBlockState()), new StraightTrunkPlacer(5, 2, 0), BlockStateProvider.simple(TechnologicaBlocks.CHERRY_LEAVES.get().defaultBlockState()), new BlobFoliagePlacer(ConstantInt.of(2), ConstantInt.of(0), 3), new TwoLayersFeatureSize(1, 0, 1)).ignoreVines().build()));
				context.register(CHESTNUT, new ConfiguredFeature(Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.CHESTNUT_LOG.get().defaultBlockState()), new StraightTrunkPlacer(4, 1, 0), BlockStateProvider.simple(TechnologicaBlocks.CHESTNUT_LEAVES.get().defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(0), ConstantInt.of(0)), new TwoLayersFeatureSize(1, 0, 2)).ignoreVines().build()));
				context.register(CINNAMON, new ConfiguredFeature(Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.CINNAMON_LOG.get().defaultBlockState()), new StraightTrunkPlacer(4, 1, 0), BlockStateProvider.simple(TechnologicaBlocks.CINNAMON_LEAVES.get().defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(0), ConstantInt.of(0)), new TwoLayersFeatureSize(1, 0, 2)).ignoreVines().build()));
				context.register(COCONUT, new ConfiguredFeature(Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.COCONUT_LOG.get().defaultBlockState()), new StraightTrunkPlacer(7, 5, 0), BlockStateProvider.simple(TechnologicaBlocks.COCONUT_LEAVES.get().defaultBlockState()), new PalmFoliagePlacer(ConstantInt.of(5), ConstantInt.of(1)), new TwoLayersFeatureSize(0, 0, 0)).ignoreVines().build()));
				context.register(EBONY, new ConfiguredFeature(Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.EBONY_LOG.get().defaultBlockState()), new StraightTrunkPlacer(4, 1, 0), BlockStateProvider.simple(TechnologicaBlocks.EBONY_LEAVES.get().defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(0), ConstantInt.of(0)), new TwoLayersFeatureSize(1, 0, 2)).ignoreVines().build()));
				context.register(KIWI, new ConfiguredFeature(Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.KIWI_LOG.get().defaultBlockState()), new StraightTrunkPlacer(3, 1, 0), BlockStateProvider.simple(TechnologicaBlocks.KIWI_LEAVES.get().defaultBlockState()), new AcaciaFoliagePlacer(ConstantInt.of(3), ConstantInt.of(0)), new TwoLayersFeatureSize(1, 0, 2)).ignoreVines().build()));
				context.register(LEMON, new ConfiguredFeature(Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.LEMON_LOG.get().defaultBlockState()), new StraightTrunkPlacer(2, 2, 0), BlockStateProvider.simple(TechnologicaBlocks.LEMON_LEAVES.get().defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(0), ConstantInt.of(0)), new TwoLayersFeatureSize(1, 0, 2)).ignoreVines().build()));
				context.register(LIME, new ConfiguredFeature(Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.LIME_LOG.get().defaultBlockState()), new StraightTrunkPlacer(2, 2, 0), BlockStateProvider.simple(TechnologicaBlocks.LIME_LEAVES.get().defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(0), ConstantInt.of(0)), new TwoLayersFeatureSize(1, 0, 2)).ignoreVines().build()));
				context.register(MAHOGANY, new ConfiguredFeature(Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.MAHOGANY_LOG.get().defaultBlockState()), new StraightTrunkPlacer(4, 1, 0), BlockStateProvider.simple(TechnologicaBlocks.MAHOGANY_LEAVES.get().defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(0), ConstantInt.of(0)), new TwoLayersFeatureSize(1, 0, 2)).ignoreVines().build()));
				context.register(MAPLE, new ConfiguredFeature(Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.MAPLE_LOG.get().defaultBlockState()), new StraightTrunkPlacer(4, 1, 0), BlockStateProvider.simple(TechnologicaBlocks.MAPLE_LEAVES.get().defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(0), ConstantInt.of(0)), new TwoLayersFeatureSize(1, 0, 2)).ignoreVines().build()));
				context.register(OLIVE, new ConfiguredFeature(Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.OLIVE_LOG.get().defaultBlockState()), new StraightTrunkPlacer(4, 1, 0), BlockStateProvider.simple(TechnologicaBlocks.OLIVE_LEAVES.get().defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(0), ConstantInt.of(0)), new TwoLayersFeatureSize(1, 0, 2)).ignoreVines().build()));
				context.register(ORANGE, new ConfiguredFeature(Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.ORANGE_LOG.get().defaultBlockState()), new StraightTrunkPlacer(4, 1, 0), BlockStateProvider.simple(TechnologicaBlocks.ORANGE_LEAVES.get().defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(0), ConstantInt.of(0)), new TwoLayersFeatureSize(1, 0, 2)).ignoreVines().build()));
				context.register(PEACH, new ConfiguredFeature(Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.PEACH_LOG.get().defaultBlockState()), new StraightTrunkPlacer(5, 2, 0), BlockStateProvider.simple(TechnologicaBlocks.PEACH_LEAVES.get().defaultBlockState()), new BlobFoliagePlacer(ConstantInt.of(2), ConstantInt.of(0), 3), new TwoLayersFeatureSize(1, 0, 2)).ignoreVines().build()));
				context.register(PEAR, new ConfiguredFeature(Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.PEAR_LOG.get().defaultBlockState()), new StraightTrunkPlacer(5, 2, 0), BlockStateProvider.simple(TechnologicaBlocks.PEAR_LEAVES.get().defaultBlockState()), new TeardropFoliagePlacer(ConstantInt.of(2), ConstantInt.of(0), 6), new TwoLayersFeatureSize(1, 0, 1)).ignoreVines().build()));
				context.register(PLUM, new ConfiguredFeature(Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.PLUM_LOG.get().defaultBlockState()), new StraightTrunkPlacer(4, 1, 0), BlockStateProvider.simple(TechnologicaBlocks.PLUM_LEAVES.get().defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(0), ConstantInt.of(0)), new TwoLayersFeatureSize(1, 0, 2)).ignoreVines().build()));
				//context.register(REDWOOD, new ConfiguredFeature(Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.REDWOOD_LOG.get().defaultBlockState()), new ThreeWideTrunkPlacer(18, 5, 19), BlockStateProvider.simple(TechnologicaBlocks.REDWOOD_LEAVES.get().defaultBlockState()), new RedwoodFoliagePlacer(ConstantInt.of(4), ConstantInt.of(7)), new TwoLayersFeatureSize(1, 0, 2)).ignoreVines().build()));
				context.register(ROSEWOOD, new ConfiguredFeature(Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.ROSEWOOD_LOG.get().defaultBlockState()), new StraightTrunkPlacer(4, 1, 0), BlockStateProvider.simple(TechnologicaBlocks.ROSEWOOD_LEAVES.get().defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(0), ConstantInt.of(0)), new TwoLayersFeatureSize(1, 0, 2)).ignoreVines().build()));
				context.register(RUBBER, new ConfiguredFeature(Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.RUBBER_LOG.get().defaultBlockState()), new StraightTrunkPlacer(4, 1, 0), BlockStateProvider.simple(TechnologicaBlocks.RUBBER_LEAVES.get().defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(0), ConstantInt.of(0)), new TwoLayersFeatureSize(1, 0, 2)).ignoreVines().build()));
				context.register(TEAK, new ConfiguredFeature(Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.TEAK_LOG.get().defaultBlockState()), new StraightTrunkPlacer(4, 1, 0), BlockStateProvider.simple(TechnologicaBlocks.TEAK_LEAVES.get().defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(0), ConstantInt.of(0)), new TwoLayersFeatureSize(1, 0, 2)).ignoreVines().build()));
				context.register(WALNUT, new ConfiguredFeature(Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.WALNUT_LOG.get().defaultBlockState()), new StraightTrunkPlacer(4, 1, 0), BlockStateProvider.simple(TechnologicaBlocks.WALNUT_LEAVES.get().defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(0), ConstantInt.of(0)), new TwoLayersFeatureSize(1, 0, 2)).ignoreVines().build()));
				context.register(ZEBRAWOOD, new ConfiguredFeature(Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.ZEBRAWOOD_LOG.get().defaultBlockState()), new StraightTrunkPlacer(4, 1, 0), BlockStateProvider.simple(TechnologicaBlocks.ZEBRAWOOD_LEAVES.get().defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(0), ConstantInt.of(0)), new TwoLayersFeatureSize(1, 0, 2)).ignoreVines().build()));
				context.register(ANCIENT_AMBROSIA, new ConfiguredFeature(Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.FRUITFUL_LOG.get().defaultBlockState()), new StraightTrunkPlacer(4, 1, 0), BlockStateProvider.simple(TechnologicaBlocks.FRUITFUL_LEAVES.get().defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(0), ConstantInt.of(0)), new TwoLayersFeatureSize(0, 0, 0)).ignoreVines().build()));
				context.register(BENEVOLENT_APOTHECARY, new ConfiguredFeature(Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.BENEVOLENT_LOG.get().defaultBlockState()), new StraightTrunkPlacer(4, 1, 0), BlockStateProvider.simple(TechnologicaBlocks.BENEVOLENT_LEAVES.get().defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(0), ConstantInt.of(0)), new TwoLayersFeatureSize(0, 0, 0)).ignoreVines().build()));
				context.register(CRYOGENIC_SPIRE, new ConfiguredFeature(Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.FROSTBITTEN_LOG.get().defaultBlockState()), new StraightTrunkPlacer(10, 10, 0), BlockStateProvider.simple(TechnologicaBlocks.FROSTBITTEN_LEAVES.get().defaultBlockState()), new MegaPineFoliagePlacer(ConstantInt.of(0), ConstantInt.of(5), UniformInt.of(4, 13)), new TwoLayersFeatureSize(0, 0, 0)).ignoreVines().build()));
				context.register(MALEVOLENT_APOTHECARY, new ConfiguredFeature(Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.MALEVOLENT_LOG.get().defaultBlockState()), new StraightTrunkPlacer(4, 1, 0), BlockStateProvider.simple(TechnologicaBlocks.MALEVOLENT_LEAVES.get().defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(0), ConstantInt.of(0)), new TwoLayersFeatureSize(0, 0, 0)).ignoreVines().build()));
				context.register(NECROTIC, new ConfiguredFeature(Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.NECROTIC_LOG.get().defaultBlockState()), new StraightTrunkPlacer(4, 1, 0), BlockStateProvider.simple(TechnologicaBlocks.CURSED_LEAVES.get().defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(0), ConstantInt.of(0)), new TwoLayersFeatureSize(0, 0, 0)).ignoreVines().build()));
				context.register(SERENDIPITOUS_APOTHECARY, new ConfiguredFeature(Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.ALCHEMICAL_LOG.get().defaultBlockState()), new StraightTrunkPlacer(4, 1, 0), BlockStateProvider.simple(TechnologicaBlocks.ALCHEMICAL_LEAVES.get().defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(0), ConstantInt.of(0)), new TwoLayersFeatureSize(0, 0, 0)).ignoreVines().build()));
				context.register(THUNDEROUS_CONDUCTOR, new ConfiguredFeature(Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.CONDUCTIVE_LOG.get().defaultBlockState()), new StraightTrunkPlacer(10, 10, 0), BlockStateProvider.simple(TechnologicaBlocks.CONDUCTIVE_LEAVES.get().defaultBlockState()), new DishFoliagePlacer(ConstantInt.of(9), ConstantInt.of(0), 3), new TwoLayersFeatureSize(0, 0, 0)).ignoreVines().build()));
				context.register(TOWERING_INFERNO, new ConfiguredFeature(Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.INFERNAL_LOG.get().defaultBlockState()), new StraightTrunkPlacer(10, 10, 0), BlockStateProvider.simple(Blocks.FIRE.defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(9), ConstantInt.of(0)), new TwoLayersFeatureSize(0, 0, 0)).ignoreVines().build()));
			
				context.register(TREES_MODIFIED_SAVANNA, new ConfiguredFeature(Feature.RANDOM_SELECTOR, new RandomFeatureConfiguration(List.of(new WeightedPlacedFeature(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ZEBRAWOOD_CHECKED), 0.8F)), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ZEBRAWOOD_CHECKED))));
				context.register(TREES_MODIFIED_JUNGLE, new ConfiguredFeature(Feature.RANDOM_SELECTOR, (new RandomFeatureConfiguration(List.of(new WeightedPlacedFeature(context.lookup(Registries.PLACED_FEATURE).getOrThrow(EBONY_CHECKED), 0.33F), new WeightedPlacedFeature(context.lookup(Registries.PLACED_FEATURE).getOrThrow(KIWI_CHECKED), 0.33F)), context.lookup(Registries.PLACED_FEATURE).getOrThrow(RUBBER_CHECKED)))));
				context.register(TREES_MODIFIED_JUNGLE_EDGE, new ConfiguredFeature(Feature.RANDOM_SELECTOR, (new RandomFeatureConfiguration(List.of(new WeightedPlacedFeature(context.lookup(Registries.PLACED_FEATURE).getOrThrow(TEAK_CHECKED), 0.8F)), context.lookup(Registries.PLACED_FEATURE).getOrThrow(TEAK_CHECKED)))));
				context.register(TREES_MODIFIED_BAMBOO_JUNGLE, new ConfiguredFeature(Feature.RANDOM_SELECTOR, (new RandomFeatureConfiguration(List.of(new WeightedPlacedFeature(context.lookup(Registries.PLACED_FEATURE).getOrThrow(CHERRY_CHECKED), 0.5F)), context.lookup(Registries.PLACED_FEATURE).getOrThrow(PLUM_CHECKED)))));
				context.register(TREES_MODIFIED_FOREST, new ConfiguredFeature(Feature.RANDOM_SELECTOR, (new RandomFeatureConfiguration(List.of(new WeightedPlacedFeature(context.lookup(Registries.PLACED_FEATURE).getOrThrow(CHESTNUT_CHECKED), 0.8F)), context.lookup(Registries.PLACED_FEATURE).getOrThrow(CHESTNUT_CHECKED)))));
				context.register(TREES_MODIFIED_BIRCH_FOREST, new ConfiguredFeature(Feature.RANDOM_SELECTOR, (new RandomFeatureConfiguration(List.of(new WeightedPlacedFeature(context.lookup(Registries.PLACED_FEATURE).getOrThrow(PEACH_CHECKED), 0.8F)), context.lookup(Registries.PLACED_FEATURE).getOrThrow(PEACH_CHECKED)))));
				context.register(TREES_MODIFIED_WOODED_HILLS, new ConfiguredFeature(Feature.RANDOM_SELECTOR, (new RandomFeatureConfiguration(List.of(new WeightedPlacedFeature(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ASPEN_CHECKED), 0.8F)), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ASPEN_CHECKED)))));
				context.register(TREES_MODIFIED_BEACH, new ConfiguredFeature(Feature.RANDOM_SELECTOR, (new RandomFeatureConfiguration(List.of(new WeightedPlacedFeature(context.lookup(Registries.PLACED_FEATURE).getOrThrow(COCONUT_CHECKED), 0.8F)), context.lookup(Registries.PLACED_FEATURE).getOrThrow(COCONUT_CHECKED)))));
				context.register(TREES_MODIFIED_TAIGA, new ConfiguredFeature(Feature.RANDOM_SELECTOR, (new RandomFeatureConfiguration(List.of(new WeightedPlacedFeature(context.lookup(Registries.PLACED_FEATURE).getOrThrow(APRICOT_CHECKED), 0.5F)), context.lookup(Registries.PLACED_FEATURE).getOrThrow(PEAR_CHECKED)))));
				context.register(TREES_MODIFIED_SNOWY_TAIGA, new ConfiguredFeature(Feature.RANDOM_SELECTOR, (new RandomFeatureConfiguration(List.of(new WeightedPlacedFeature(context.lookup(Registries.PLACED_FEATURE).getOrThrow(MAPLE_CHECKED), 0.5F)), context.lookup(Registries.PLACED_FEATURE).getOrThrow(WALNUT_CHECKED)))));
				context.register(TREES_MODIFIED_SWAMP, new ConfiguredFeature(Feature.RANDOM_SELECTOR, (new RandomFeatureConfiguration(List.of(new WeightedPlacedFeature(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORANGE_CHECKED), 0.8F)), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORANGE_CHECKED)))));
				context.register(PATCH_BLACKBERRY_BUSH, new ConfiguredFeature(Feature.RANDOM_PATCH, FeatureUtils.simplePatchConfiguration(Feature.SIMPLE_BLOCK, new SimpleBlockConfiguration(BlockStateProvider.simple(TechnologicaBlocks.BLACKBERRY_BUSH.get().defaultBlockState().setValue(SweetBerryBushBlock.AGE, Integer.valueOf(3)))), List.of(Blocks.GRASS_BLOCK))));
				context.register(PATCH_BLUEBERRY_BUSH, new ConfiguredFeature(Feature.RANDOM_PATCH, FeatureUtils.simplePatchConfiguration(Feature.SIMPLE_BLOCK, new SimpleBlockConfiguration(BlockStateProvider.simple(TechnologicaBlocks.BLUEBERRY_BUSH.get().defaultBlockState().setValue(SweetBerryBushBlock.AGE, Integer.valueOf(3)))), List.of(Blocks.GRASS_BLOCK))));
				context.register(PATCH_RASPBERRY_BUSH, new ConfiguredFeature(Feature.RANDOM_PATCH, FeatureUtils.simplePatchConfiguration(Feature.SIMPLE_BLOCK, new SimpleBlockConfiguration(BlockStateProvider.simple(TechnologicaBlocks.RASPBERRY_BUSH.get().defaultBlockState().setValue(SweetBerryBushBlock.AGE, Integer.valueOf(3)))), List.of(Blocks.GRASS_BLOCK))));
				context.register(PATCH_STRAWBERRY_BUSH, new ConfiguredFeature(Feature.RANDOM_PATCH, FeatureUtils.simplePatchConfiguration(Feature.SIMPLE_BLOCK, new SimpleBlockConfiguration(BlockStateProvider.simple(TechnologicaBlocks.STRAWBERRY_BUSH.get().defaultBlockState().setValue(SweetBerryBushBlock.AGE, Integer.valueOf(3)))), List.of(Blocks.GRASS_BLOCK))));
				context.register(PATCH_COTTON_BUSH, new ConfiguredFeature(Feature.RANDOM_PATCH, FeatureUtils.simplePatchConfiguration(Feature.SIMPLE_BLOCK, new SimpleBlockConfiguration(BlockStateProvider.simple(TechnologicaBlocks.COTTON_BUSH.get().defaultBlockState().setValue(SweetBerryBushBlock.AGE, Integer.valueOf(3)))), List.of(Blocks.GRASS_BLOCK))));
				context.register(PATCH_PEPPERCORN_BUSH, new ConfiguredFeature(Feature.RANDOM_PATCH, FeatureUtils.simplePatchConfiguration(Feature.SIMPLE_BLOCK, new SimpleBlockConfiguration(BlockStateProvider.simple(TechnologicaBlocks.PEPPERCORNS.get().defaultBlockState().setValue(CropBlock.AGE, Integer.valueOf(3)))), List.of(Blocks.GRASS_BLOCK))));
			})
			.add(Registries.PLACED_FEATURE, context -> {
            	context.register(BRINE_POOL_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(BRINE_POOL_CONFIGURED), List.of(RarityFilter.onAverageOnceEvery(2), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, BiomeFilter.biome())));
            	context.register(OASIS_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(OASIS_CONFIGURED), List.of(RarityFilter.onAverageOnceEvery(200), InSquarePlacement.spread(), HeightRangePlacement.uniform(VerticalAnchor.bottom(), VerticalAnchor.absolute(192)), BiomeFilter.biome())));
            	context.register(APRICOT_CHECKED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(APRICOT), List.of(PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.APRICOT_SAPLING.get()))));
            	context.register(ASPEN_CHECKED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(ASPEN), List.of(PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.ASPEN_SAPLING.get()))));
            	context.register(AVOCADO_CHECKED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(AVOCADO), List.of(PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.AVOCADO_SAPLING.get()))));
            	context.register(BANANA_CHECKED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(BANANA), List.of(PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.BANANA_SAPLING.get()))));
            	context.register(CHERRY_CHECKED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(CHERRY), List.of(PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.CHERRY_SAPLING.get()))));
            	context.register(CHESTNUT_CHECKED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(CHESTNUT), List.of(PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.CHESTNUT_SAPLING.get()))));
            	context.register(CINNAMON_CHECKED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(CINNAMON), List.of(PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.CINNAMON_SAPLING.get()))));
            	context.register(COCONUT_CHECKED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(COCONUT), List.of(PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.COCONUT_SAPLING.get()))));
            	context.register(EBONY_CHECKED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(EBONY), List.of(PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.EBONY_SAPLING.get()))));
            	context.register(KIWI_CHECKED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(KIWI), List.of(PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.KIWI_SAPLING.get()))));
            	context.register(LEMON_CHECKED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(LEMON), List.of(PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.LEMON_SAPLING.get()))));
            	context.register(LIME_CHECKED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(LIME), List.of(PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.LIME_SAPLING.get()))));
            	context.register(MAHOGANY_CHECKED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(MAHOGANY), List.of(PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.MAHOGANY_SAPLING.get()))));
            	context.register(MAPLE_CHECKED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(MAPLE), List.of(PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.MAPLE_SAPLING.get()))));
            	context.register(OLIVE_CHECKED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(OLIVE), List.of(PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.OLIVE_SAPLING.get()))));
            	context.register(ORANGE_CHECKED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(ORANGE), List.of(PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.ORANGE_SAPLING.get()))));
            	context.register(PEACH_CHECKED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(PEACH), List.of(PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.PEACH_SAPLING.get()))));
            	context.register(PEAR_CHECKED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(PEAR), List.of(PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.PEAR_SAPLING.get()))));
            	context.register(PLUM_CHECKED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(PLUM), List.of(PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.PLUM_SAPLING.get()))));
            	//context.register(REDWOOD_CHECKED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(REDWOOD), List.of(PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.REDWOOD_SAPLING.get()))));
            	context.register(ROSEWOOD_CHECKED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(ROSEWOOD), List.of(PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.ROSEWOOD_SAPLING.get()))));
            	context.register(RUBBER_CHECKED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(RUBBER), List.of(PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.RUBBER_SAPLING.get()))));
            	context.register(TEAK_CHECKED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(TEAK), List.of(PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.TEAK_SAPLING.get()))));
            	context.register(WALNUT_CHECKED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(WALNUT), List.of(PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.WALNUT_SAPLING.get()))));
            	context.register(ZEBRAWOOD_CHECKED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(ZEBRAWOOD), List.of(PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.ZEBRAWOOD_SAPLING.get()))));
            	context.register(ANCIENT_AMBROSIA_CHECKED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(ANCIENT_AMBROSIA), List.of(PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.ANCIENT_AMBROSIA_SAPLING.get()))));
            	context.register(BENEVOLENT_APOTHECARY_CHECKED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(BENEVOLENT_APOTHECARY), List.of(PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.BENEVOLENT_APOTHECARY_SAPLING.get()))));
            	context.register(CRYOGENIC_SPIRE_CHECKED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(CRYOGENIC_SPIRE), List.of(PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.CRYOGENIC_SPIRE_SAPLING.get()))));
            	context.register(MALEVOLENT_APOTHECARY_CHECKED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(MALEVOLENT_APOTHECARY), List.of(PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.MALEVOLENT_APOTHECARY_SAPLING.get()))));
            	context.register(NECROTIC_CHECKED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(NECROTIC), List.of(PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.NECROTIC_SAPLING.get()))));
            	context.register(SERENDIPITOUS_APOTHECARY_CHECKED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(SERENDIPITOUS_APOTHECARY), List.of(PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.SERENDIPITOUS_APOTHECARY_SAPLING.get()))));
            	context.register(THUNDEROUS_CONDUCTOR_CHECKED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(THUNDEROUS_CONDUCTOR), List.of(PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.THUNDEROUS_CONDUCTOR_SAPLING.get()))));
            	context.register(TOWERING_INFERNO_CHECKED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(TOWERING_INFERNO), List.of(PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.TOWERING_INFERNO_SAPLING.get()))));
			
            	context.register(ORE_SPODUMENE_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(ORE_SPODUMENE), commonOrePlacement(10, HeightRangePlacement.uniform(VerticalAnchor.absolute(48), VerticalAnchor.top()))));
            	context.register(ORE_BORAX_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(ORE_BORAX), commonOrePlacement(10, HeightRangePlacement.uniform(VerticalAnchor.absolute(48), VerticalAnchor.absolute(64)))));
            	context.register(ORE_MAGNESITE_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(ORE_MAGNESITE), commonOrePlacement(10, HeightRangePlacement.uniform(VerticalAnchor.absolute(0), VerticalAnchor.top()))));
            	context.register(ORE_BAUXITE_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(ORE_BAUXITE), commonOrePlacement(10, HeightRangePlacement.triangle(VerticalAnchor.absolute(-24), VerticalAnchor.absolute(56)))));
            	context.register(ORE_APATITE_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(ORE_APATITE), commonOrePlacement(10, HeightRangePlacement.uniform(VerticalAnchor.absolute(48), VerticalAnchor.absolute(64)))));
            	context.register(ORE_PHOSPHORITE_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(ORE_PHOSPHORITE), commonOrePlacement(10, HeightRangePlacement.uniform(VerticalAnchor.absolute(32), VerticalAnchor.absolute(48)))));
            	context.register(ORE_GADOLINITE_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(ORE_GADOLINITE), commonOrePlacement(10, HeightRangePlacement.triangle(VerticalAnchor.absolute(-24), VerticalAnchor.absolute(56)))));
            	context.register(ORE_ILMENITE_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(ORE_ILMENITE), commonOrePlacement(10, HeightRangePlacement.uniform(VerticalAnchor.bottom(), VerticalAnchor.top()))));
            	context.register(ORE_PATRONITE_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(ORE_PATRONITE), commonOrePlacement(10, HeightRangePlacement.triangle(VerticalAnchor.absolute(-24), VerticalAnchor.absolute(56)))));
            	context.register(ORE_CHROMITE_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(ORE_CHROMITE), commonOrePlacement(10, HeightRangePlacement.triangle(VerticalAnchor.absolute(-24), VerticalAnchor.absolute(56)))));
            	context.register(ORE_PYROLUSITE_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(ORE_PYROLUSITE), commonOrePlacement(10, HeightRangePlacement.triangle(VerticalAnchor.absolute(-24), VerticalAnchor.absolute(56)))));
            	context.register(ORE_COBALTITE_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(ORE_COBALTITE), commonOrePlacement(10, HeightRangePlacement.triangle(VerticalAnchor.absolute(-24), VerticalAnchor.absolute(56)))));
            	context.register(ORE_GARNIERITE_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(ORE_GARNIERITE), commonOrePlacement(10, HeightRangePlacement.triangle(VerticalAnchor.absolute(-24), VerticalAnchor.absolute(56)))));
            	context.register(ORE_ARSENOPYRITE_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(ORE_ARSENOPYRITE), commonOrePlacement(10, HeightRangePlacement.uniform(VerticalAnchor.absolute(0), VerticalAnchor.top()))));
            	context.register(ORE_CROOKESITE_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(ORE_CROOKESITE), commonOrePlacement(10, HeightRangePlacement.uniform(VerticalAnchor.absolute(0), VerticalAnchor.top()))));
            	context.register(ORE_LEPIDOLITE_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(ORE_LEPIDOLITE), commonOrePlacement(10, HeightRangePlacement.uniform(VerticalAnchor.absolute(0), VerticalAnchor.top()))));
            	context.register(ORE_BASTNAESITE_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(ORE_BASTNAESITE), commonOrePlacement(10, HeightRangePlacement.triangle(VerticalAnchor.absolute(-24), VerticalAnchor.absolute(56)))));
            	context.register(ORE_TANTALITE_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(ORE_TANTALITE), commonOrePlacement(16, HeightRangePlacement.triangle(VerticalAnchor.absolute(-16), VerticalAnchor.absolute(112)))));
            	context.register(ORE_MOLYBDENITE_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(ORE_MOLYBDENITE), commonOrePlacement(16, HeightRangePlacement.triangle(VerticalAnchor.absolute(-16), VerticalAnchor.absolute(112)))));
            	context.register(ORE_PENTLANDITE_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(ORE_PENTLANDITE), commonOrePlacement(10, HeightRangePlacement.triangle(VerticalAnchor.absolute(-24), VerticalAnchor.absolute(56)))));
            	context.register(ORE_ARGENTITE_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(ORE_ARGENTITE), commonOrePlacement(10, HeightRangePlacement.uniform(VerticalAnchor.absolute(-64), VerticalAnchor.absolute(32)))));
            	context.register(ORE_GALENA_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(ORE_GALENA), commonOrePlacement(16, HeightRangePlacement.triangle(VerticalAnchor.absolute(-16), VerticalAnchor.absolute(112)))));
            	context.register(ORE_SYLVANITE_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(ORE_SYLVANITE), commonOrePlacement(10, HeightRangePlacement.uniform(VerticalAnchor.absolute(-64), VerticalAnchor.absolute(32)))));
            	context.register(ORE_CASSITERITE_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(ORE_CASSITERITE), commonOrePlacement(10, HeightRangePlacement.uniform(VerticalAnchor.absolute(0), VerticalAnchor.top()))));
            	context.register(ORE_WOLFRAMITE_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(ORE_WOLFRAMITE), commonOrePlacement(16, HeightRangePlacement.triangle(VerticalAnchor.absolute(-16), VerticalAnchor.absolute(112)))));
            	context.register(ORE_OSMIRIDIUM_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(ORE_OSMIRIDIUM), commonOrePlacement(10, HeightRangePlacement.uniform(VerticalAnchor.absolute(-64), VerticalAnchor.absolute(32)))));
            	context.register(ORE_PLATINUM_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(ORE_PLATINUM), commonOrePlacement(4, HeightRangePlacement.triangle(VerticalAnchor.absolute(-64), VerticalAnchor.absolute(32)))));
            	context.register(ORE_CINNABAR_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(ORE_CINNABAR), commonOrePlacement(4, HeightRangePlacement.uniform(VerticalAnchor.bottom(), VerticalAnchor.absolute(15)))));
            	context.register(ORE_THORIANITE_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(ORE_THORIANITE), commonOrePlacement(4, HeightRangePlacement.uniform(VerticalAnchor.bottom(), VerticalAnchor.absolute(15)))));
            	context.register(ORE_URANINITE_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(ORE_URANINITE), commonOrePlacement(4, HeightRangePlacement.uniform(VerticalAnchor.bottom(), VerticalAnchor.absolute(15)))));
            	context.register(ORE_EMERALD_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(ORE_EMERALD), commonOrePlacement(100, HeightRangePlacement.triangle(VerticalAnchor.absolute(-16), VerticalAnchor.absolute(480)))));
            	context.register(ORE_RUBY_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(ORE_RUBY), commonOrePlacement(100, HeightRangePlacement.triangle(VerticalAnchor.absolute(-16), VerticalAnchor.absolute(480)))));
            	context.register(ORE_SAPPHIRE_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(ORE_SAPPHIRE), commonOrePlacement(100, HeightRangePlacement.triangle(VerticalAnchor.absolute(-16), VerticalAnchor.absolute(480)))));
            	context.register(ORE_TOPAZ_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(ORE_TOPAZ), commonOrePlacement(100, HeightRangePlacement.triangle(VerticalAnchor.absolute(-16), VerticalAnchor.absolute(480)))));
			
            	context.register(TREES_MODIFIED_SAVANNA_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(TREES_MODIFIED_SAVANNA), VegetationPlacements.treePlacement(PlacementUtils.countExtra(1, 0.1F, 1))));
            	context.register(TREES_MODIFIED_JUNGLE_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(TREES_MODIFIED_JUNGLE), VegetationPlacements.treePlacement(PlacementUtils.countExtra(1, 0.1F, 1))));
            	context.register(TREES_MODIFIED_JUNGLE_EDGE_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(TREES_MODIFIED_JUNGLE_EDGE), VegetationPlacements.treePlacement(PlacementUtils.countExtra(1, 0.1F, 1))));
            	context.register(TREES_MODIFIED_BAMBOO_JUNGLE_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(TREES_MODIFIED_BAMBOO_JUNGLE), VegetationPlacements.treePlacement(PlacementUtils.countExtra(1, 0.1F, 1))));
            	context.register(TREES_MODIFIED_FOREST_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(TREES_MODIFIED_FOREST), VegetationPlacements.treePlacement(PlacementUtils.countExtra(1, 0.1F, 1))));
            	context.register(TREES_MODIFIED_BIRCH_FOREST_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(TREES_MODIFIED_BIRCH_FOREST), VegetationPlacements.treePlacement(PlacementUtils.countExtra(1, 0.1F, 1))));
            	context.register(TREES_MODIFIED_WOODED_HILLS_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(TREES_MODIFIED_WOODED_HILLS), VegetationPlacements.treePlacement(PlacementUtils.countExtra(1, 0.1F, 1))));
            	context.register(TREES_MODIFIED_BEACH_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(TREES_MODIFIED_BEACH), VegetationPlacements.treePlacement(PlacementUtils.countExtra(1, 0.1F, 1))));
            	context.register(TREES_MODIFIED_TAIGA_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(TREES_MODIFIED_TAIGA), VegetationPlacements.treePlacement(PlacementUtils.countExtra(1, 0.1F, 1))));
            	context.register(TREES_MODIFIED_SNOWY_TAIGA_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(TREES_MODIFIED_SNOWY_TAIGA), VegetationPlacements.treePlacement(PlacementUtils.countExtra(1, 0.1F, 1))));
            	context.register(TREES_MODIFIED_SWAMP_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(TREES_MODIFIED_SWAMP), VegetationPlacements.treePlacement(PlacementUtils.countExtra(1, 0.1F, 1))));
            	context.register(PATCH_BLACKBERRY_COMMON_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(PATCH_BLACKBERRY_BUSH), List.of(RarityFilter.onAverageOnceEvery(32), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, BiomeFilter.biome())));
            	context.register(PATCH_BLACKBERRY_RARE_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(PATCH_BLACKBERRY_BUSH), List.of(RarityFilter.onAverageOnceEvery(384), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, BiomeFilter.biome())));
            	context.register(PATCH_BLUEBERRY_COMMON_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(PATCH_BLUEBERRY_BUSH), List.of(RarityFilter.onAverageOnceEvery(32), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, BiomeFilter.biome())));
            	context.register(PATCH_BLUEBERRY_RARE_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(PATCH_BLUEBERRY_BUSH), List.of(RarityFilter.onAverageOnceEvery(384), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, BiomeFilter.biome())));
            	context.register(PATCH_RASPBERRY_COMMON_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(PATCH_RASPBERRY_BUSH), List.of(RarityFilter.onAverageOnceEvery(32), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, BiomeFilter.biome())));
            	context.register(PATCH_RASPBERRY_RARE_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(PATCH_RASPBERRY_BUSH), List.of(RarityFilter.onAverageOnceEvery(384), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, BiomeFilter.biome())));
            	context.register(PATCH_STRAWBERRY_COMMON_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(PATCH_STRAWBERRY_BUSH), List.of(RarityFilter.onAverageOnceEvery(32), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, BiomeFilter.biome())));
            	context.register(PATCH_STRAWBERRY_RARE_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(PATCH_STRAWBERRY_BUSH), List.of(RarityFilter.onAverageOnceEvery(384), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, BiomeFilter.biome())));
            	context.register(PATCH_COTTON_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(PATCH_COTTON_BUSH), List.of(RarityFilter.onAverageOnceEvery(32), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, BiomeFilter.biome())));
            	context.register(PATCH_PEPPERCORNS_PLACED, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(PATCH_PEPPERCORN_BUSH), List.of(RarityFilter.onAverageOnceEvery(5), InSquarePlacement.spread(), PlacementUtils.HEIGHTMAP_WORLD_SURFACE, BiomeFilter.biome())));
			
            	//context.register(PATCH_BLACKBERRY_BUSH_VILLAGE, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(PATCH_BLACKBERRY_BUSH), null));
            	//context.register(PATCH_BLUEBERRY_BUSH_VILLAGE, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(PATCH_BLUEBERRY_BUSH)));
            	//context.register(PATCH_RASPBERRY_BUSH_VILLAGE, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(PATCH_RASPBERRY_BUSH)));
            	//context.register(PATCH_STRAWBERRY_BUSH_VILLAGE, new PlacedFeature(context.lookup(Registries.CONFIGURED_FEATURE).getOrThrow(PATCH_STRAWBERRY_BUSH)));
			})
			.add(ForgeRegistries.Keys.BIOME_MODIFIERS, context -> {
				context.register(BADLANDS_FLUID_SPRINGS, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.BADLANDS)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(BRINE_POOL_PLACED)), Decoration.FLUID_SPRINGS));
				context.register(DESERT_FLUID_SPRINGS, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.DESERT)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(OASIS_PLACED)), Decoration.FLUID_SPRINGS));
				
				context.register(BADLANDS_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.BADLANDS)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(BAMBOO_JUNGLE_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.BAMBOO_JUNGLE)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(BEACH_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.BEACH)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(BIRCH_FOREST_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.BIRCH_FOREST)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(COLD_OCEAN_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.COLD_OCEAN)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(DARK_FOREST_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.DARK_FOREST)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(DEEP_COLD_OCEAN_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.DEEP_COLD_OCEAN)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(DEEP_DARK_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.DEEP_DARK)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(DEEP_FROZEN_OCEAN_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.DEEP_FROZEN_OCEAN)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(DEEP_LUKEWARM_OCEAN_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.DEEP_LUKEWARM_OCEAN)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(DEEP_OCEAN_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.DEEP_OCEAN)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(DESERT_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.DESERT)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(DRIPSTONE_CAVES_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.DRIPSTONE_CAVES)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(ERODED_BADLANDS_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.ERODED_BADLANDS)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(FLOWER_FOREST_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.FLOWER_FOREST)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(FOREST_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.FOREST)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(FROZEN_OCEAN_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.FROZEN_OCEAN)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(FROZEN_PEAKS_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.FROZEN_PEAKS)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(FROZEN_RIVER_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.FROZEN_RIVER)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(GROVE_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.GROVE)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(ICE_SPIKES_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.ICE_SPIKES)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(JAGGED_PEAKS_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.JAGGED_PEAKS)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(JUNGLE_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.JUNGLE)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(LUKEWARM_OCEAN_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.LUKEWARM_OCEAN)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(LUSH_CAVES_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.LUSH_CAVES)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(MANGROVE_SWAMP_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.MANGROVE_SWAMP)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(MEADOW_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.MEADOW)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(MUSHROOM_FIELDS_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.MUSHROOM_FIELDS)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(OCEAN_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.OCEAN)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(OLD_GROWTH_BIRCH_FOREST_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.OLD_GROWTH_BIRCH_FOREST)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(OLD_GROWTH_PINE_TAIGA_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.OLD_GROWTH_PINE_TAIGA)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(OLD_GROWTH_SPRUCE_TAIGA_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.OLD_GROWTH_SPRUCE_TAIGA)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(PLAINS_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.PLAINS)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(RIVER_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.RIVER)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(SAVANNA_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.SAVANNA)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(SAVANNA_PLATEAU_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.SAVANNA_PLATEAU)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(SNOWY_BEACH_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.SNOWY_BEACH)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(SNOWY_PLAINS_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.SNOWY_PLAINS)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(SNOWY_SLOPES_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.SNOWY_SLOPES)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(SNOWY_TAIGA_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.SNOWY_TAIGA)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(SPARSE_JUNGLE_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.SPARSE_JUNGLE)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(STONY_PEAKS_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.STONY_PEAKS)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(STONY_SHORE_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.STONY_SHORE)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(SUNFLOWER_PLAINS_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.SUNFLOWER_PLAINS)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(SWAMP_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.SWAMP)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(TAIGA_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.TAIGA)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(WARM_OCEAN_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.WARM_OCEAN)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(WINDSWEPT_FOREST_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.WINDSWEPT_FOREST)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(WINDSWEPT_GRAVELLY_HILLS_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.WINDSWEPT_GRAVELLY_HILLS)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(WINDSWEPT_HILLS_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.WINDSWEPT_HILLS)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(WINDSWEPT_SAVANNA_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.WINDSWEPT_SAVANNA)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				context.register(WOODED_BADLANDS_UNDERGROUND_ORES, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.WOODED_BADLANDS)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SPODUMENE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BORAX_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MAGNESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BAUXITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_APATITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PHOSPHORITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GADOLINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ILMENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PATRONITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CHROMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PYROLUSITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_COBALTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GARNIERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARSENOPYRITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CROOKESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_LEPIDOLITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_BASTNAESITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TANTALITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_MOLYBDENITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PENTLANDITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_ARGENTITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_GALENA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SYLVANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CASSITERITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_WOLFRAMITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_OSMIRIDIUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_PLATINUM_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_CINNABAR_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_THORIANITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_URANINITE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_RUBY_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_SAPPHIRE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(ORE_TOPAZ_PLACED)), Decoration.UNDERGROUND_ORES));
				
				context.register(BAMBOO_JUNGLE_VEGETATION, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.BAMBOO_JUNGLE)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(TREES_MODIFIED_BAMBOO_JUNGLE_PLACED)), Decoration.VEGETAL_DECORATION));
				context.register(BEACH_VEGETATION, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.BEACH)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(TREES_MODIFIED_BEACH_PLACED)), Decoration.VEGETAL_DECORATION));
				context.register(BIRCH_FOREST_VEGETATION, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.BIRCH_FOREST)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(TREES_MODIFIED_BIRCH_FOREST_PLACED)), Decoration.VEGETAL_DECORATION));
				context.register(FOREST_VEGETATION, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.FOREST)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(TREES_MODIFIED_FOREST_PLACED)), Decoration.VEGETAL_DECORATION));
				context.register(JUNGLE_VEGETATION, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.JUNGLE)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(TREES_MODIFIED_JUNGLE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(PATCH_PEPPERCORNS_PLACED)), Decoration.VEGETAL_DECORATION));
				context.register(OLD_GROWTH_PINE_TAIGA_VEGETATION, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.OLD_GROWTH_PINE_TAIGA)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(PATCH_BLACKBERRY_COMMON_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(PATCH_BLUEBERRY_COMMON_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(PATCH_RASPBERRY_COMMON_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(PATCH_STRAWBERRY_COMMON_PLACED)), Decoration.VEGETAL_DECORATION));
				context.register(OLD_GROWTH_SPRUCE_TAIGA_VEGETATION, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.OLD_GROWTH_SPRUCE_TAIGA)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(PATCH_BLACKBERRY_COMMON_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(PATCH_BLUEBERRY_COMMON_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(PATCH_RASPBERRY_COMMON_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(PATCH_STRAWBERRY_COMMON_PLACED)), Decoration.VEGETAL_DECORATION));
				context.register(PLAINS_VEGETATION, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.PLAINS)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(PATCH_COTTON_PLACED)), Decoration.VEGETAL_DECORATION));
				context.register(SAVANNA_VEGETATION, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.SAVANNA)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(TREES_MODIFIED_SAVANNA_PLACED)), Decoration.VEGETAL_DECORATION));
				context.register(SNOWY_SLOPES_VEGETATION, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.SNOWY_SLOPES)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(TREES_MODIFIED_WOODED_HILLS_PLACED)), Decoration.VEGETAL_DECORATION));
				context.register(SNOWY_TAIGA_VEGETATION, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.SNOWY_TAIGA)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(TREES_MODIFIED_SNOWY_TAIGA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(PATCH_BLACKBERRY_RARE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(PATCH_BLUEBERRY_RARE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(PATCH_RASPBERRY_RARE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(PATCH_STRAWBERRY_RARE_PLACED)), Decoration.VEGETAL_DECORATION));
				context.register(SPARSE_JUNGLE_VEGETATION, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.SPARSE_JUNGLE)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(TREES_MODIFIED_JUNGLE_EDGE_PLACED)), Decoration.VEGETAL_DECORATION));
				context.register(STONY_PEAKS_VEGETATION, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.STONY_PEAKS)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(TREES_MODIFIED_WOODED_HILLS_PLACED)), Decoration.VEGETAL_DECORATION));
				context.register(SWAMP_VEGETATION, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.SWAMP)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(TREES_MODIFIED_SWAMP_PLACED)), Decoration.VEGETAL_DECORATION));
				context.register(TAIGA_VEGETATION, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.TAIGA)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(TREES_MODIFIED_TAIGA_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(PATCH_BLACKBERRY_RARE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(PATCH_BLUEBERRY_RARE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(PATCH_RASPBERRY_RARE_PLACED), context.lookup(Registries.PLACED_FEATURE).getOrThrow(PATCH_STRAWBERRY_RARE_PLACED)), Decoration.VEGETAL_DECORATION));
				context.register(WINDSWEPT_FOREST_VEGETATION, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.WINDSWEPT_FOREST)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(TREES_MODIFIED_WOODED_HILLS_PLACED)), Decoration.VEGETAL_DECORATION));
				context.register(WINDSWEPT_HILLS_VEGETATION, new AddFeaturesBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.WINDSWEPT_HILLS)), HolderSet.direct(context.lookup(Registries.PLACED_FEATURE).getOrThrow(TREES_MODIFIED_WOODED_HILLS_PLACED)), Decoration.VEGETAL_DECORATION));
				
				context.register(BADLANDS_SPAWNS, new AddSpawnsBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.BADLANDS)), List.of(new SpawnerData(TechnologicaEntityType.COYOTE.get(), 100, 1, 2), new SpawnerData(TechnologicaEntityType.LIZARD.get(), 100, 3, 5), new SpawnerData(TechnologicaEntityType.SCORPION.get(), 100, 1, 2), new SpawnerData(TechnologicaEntityType.VULTURE.get(), 100, 1, 2))));
				context.register(BEACH_SPAWNS, new AddSpawnsBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.BEACH)), List.of(new SpawnerData(TechnologicaEntityType.CRAB.get(), 100, 1, 2))));
				context.register(BIRCH_FOREST_SPAWNS, new AddSpawnsBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.BIRCH_FOREST)), List.of(new SpawnerData(TechnologicaEntityType.DEER.get(), 100, 1, 2), new SpawnerData(TechnologicaEntityType.RACCOON.get(), 100, 1, 2), new SpawnerData(TechnologicaEntityType.TURKEY.get(), 100, 1, 2))));
				context.register(DESERT_SPAWNS, new AddSpawnsBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.DESERT)), List.of(new SpawnerData(TechnologicaEntityType.CAMEL.get(), 100, 1, 2), new SpawnerData(TechnologicaEntityType.COBRA.get(), 100, 1, 2), new SpawnerData(TechnologicaEntityType.MUMMY.get(), 100, 1, 1))));
				context.register(FOREST_SPAWNS, new AddSpawnsBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.FOREST)), List.of(new SpawnerData(TechnologicaEntityType.BEAVER.get(), 100, 1, 2), new SpawnerData(TechnologicaEntityType.DEER.get(), 100, 1, 2), new SpawnerData(TechnologicaEntityType.GRIZZLY_BEAR.get(), 100, 1, 2), new SpawnerData(TechnologicaEntityType.RACCOON.get(), 100, 1, 2))));
				context.register(FROZEN_OCEAN_SPAWNS, new AddSpawnsBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.FROZEN_OCEAN)), List.of(new SpawnerData(TechnologicaEntityType.KING_CRAB.get(), 100, 1, 2), new SpawnerData(TechnologicaEntityType.LEOPARD_SEAL.get(), 100, 1, 2), new SpawnerData(TechnologicaEntityType.NARWHAL.get(), 100, 1, 2), new SpawnerData(TechnologicaEntityType.WALRUS.get(), 100, 1, 2))));
				context.register(ICE_SPIKES_SPAWNS, new AddSpawnsBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.ICE_SPIKES)), List.of(new SpawnerData(TechnologicaEntityType.PENGUIN.get(), 100, 3, 5))));
				context.register(JUNGLE_SPAWNS, new AddSpawnsBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.JUNGLE)), List.of(new SpawnerData(TechnologicaEntityType.GORILLA.get(), 100, 1, 2), new SpawnerData(TechnologicaEntityType.SLOTH.get(), 100, 1, 2))));
				context.register(MANGROVE_SWAMP_SPAWNS, new AddSpawnsBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.MANGROVE_SWAMP)), List.of(new SpawnerData(TechnologicaEntityType.FIGURE_EIGHT_PUFFERFISH.get(), 100, 1, 2), new SpawnerData(TechnologicaEntityType.JAGUAR.get(), 100, 1, 2), new SpawnerData(TechnologicaEntityType.POISON_DART_FROG.get(), 100, 1, 2), new SpawnerData(TechnologicaEntityType.STINGRAY.get(), 100, 1, 2))));
				context.register(OCEAN_SPAWNS, new AddSpawnsBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.OCEAN)), List.of(new SpawnerData(TechnologicaEntityType.SHARK.get(), 100, 1, 2))));
				context.register(PLAINS_SPAWNS, new AddSpawnsBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.PLAINS)), List.of(new SpawnerData(TechnologicaEntityType.BUFFALO.get(), 100, 1, 2))));
				context.register(RIVER_SPAWNS, new AddSpawnsBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.RIVER)), List.of(new SpawnerData(TechnologicaEntityType.BEAVER.get(), 100, 1, 2), new SpawnerData(TechnologicaEntityType.DUCK.get(), 100, 1, 2), new SpawnerData(TechnologicaEntityType.PIRANHA.get(), 100, 3, 5))));
				context.register(SAVANNA_SPAWNS, new AddSpawnsBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.SAVANNA)), List.of(new SpawnerData(TechnologicaEntityType.ELEPHANT.get(), 100, 1, 2), new SpawnerData(TechnologicaEntityType.GIRAFFE.get(), 100, 1, 2), new SpawnerData(TechnologicaEntityType.LION.get(), 100, 3, 5), new SpawnerData(TechnologicaEntityType.OSTRICH.get(), 100, 1, 2), new SpawnerData(TechnologicaEntityType.ZEBRA.get(), 100, 1, 2))));
				context.register(SNOWY_SLOPES_SPAWNS, new AddSpawnsBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.SNOWY_SLOPES)), List.of(new SpawnerData(TechnologicaEntityType.BEAVER.get(), 100, 1, 2), new SpawnerData(TechnologicaEntityType.DEER.get(), 100, 1, 2), new SpawnerData(TechnologicaEntityType.GRIZZLY_BEAR.get(), 100, 1, 2), new SpawnerData(TechnologicaEntityType.TURKEY.get(), 100, 1, 2))));
				context.register(SNOWY_TAIGA_SPAWNS, new AddSpawnsBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.SNOWY_TAIGA)), List.of(new SpawnerData(TechnologicaEntityType.BEAVER.get(), 100, 1, 2), new SpawnerData(TechnologicaEntityType.DEER.get(), 100, 1, 2), new SpawnerData(TechnologicaEntityType.GRIZZLY_BEAR.get(), 100, 1, 2), new SpawnerData(TechnologicaEntityType.TURKEY.get(), 100, 1, 2))));
				context.register(STONY_PEAKS_SPAWNS, new AddSpawnsBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.STONY_PEAKS)), List.of(new SpawnerData(TechnologicaEntityType.BEAVER.get(), 100, 1, 2), new SpawnerData(TechnologicaEntityType.DEER.get(), 100, 1, 2), new SpawnerData(TechnologicaEntityType.GRIZZLY_BEAR.get(), 100, 1, 2), new SpawnerData(TechnologicaEntityType.TURKEY.get(), 100, 1, 2))));
				context.register(SWAMP_SPAWNS, new AddSpawnsBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.SWAMP)), List.of(new SpawnerData(TechnologicaEntityType.ALLIGATOR.get(), 100, 1, 2), new SpawnerData(TechnologicaEntityType.COTTONMOUTH.get(), 100, 1, 2), new SpawnerData(TechnologicaEntityType.FLAMINGO.get(), 100, 1, 2), new SpawnerData(TechnologicaEntityType.STINGRAY.get(), 100, 1, 2))));
				context.register(TAIGA_SPAWNS, new AddSpawnsBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.TAIGA)), List.of(new SpawnerData(TechnologicaEntityType.BEAVER.get(), 100, 1, 2), new SpawnerData(TechnologicaEntityType.DEER.get(), 100, 1, 2), new SpawnerData(TechnologicaEntityType.GRIZZLY_BEAR.get(), 100, 1, 2), new SpawnerData(TechnologicaEntityType.TURKEY.get(), 100, 1, 2))));
				context.register(WARM_OCEAN_SPAWNS, new AddSpawnsBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.WARM_OCEAN)), List.of(new SpawnerData(TechnologicaEntityType.OCTOPUS.get(), 100, 1, 2))));
				context.register(WINDSWEPT_FOREST_SPAWNS, new AddSpawnsBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.WINDSWEPT_FOREST)), List.of(new SpawnerData(TechnologicaEntityType.BEAVER.get(), 100, 1, 2), new SpawnerData(TechnologicaEntityType.DEER.get(), 100, 1, 2), new SpawnerData(TechnologicaEntityType.GRIZZLY_BEAR.get(), 100, 1, 2), new SpawnerData(TechnologicaEntityType.TURKEY.get(), 100, 1, 2))));
				context.register(WINDSWEPT_HILLS_SPAWNS, new AddSpawnsBiomeModifier(HolderSet.direct(context.lookup(Registries.BIOME).getOrThrow(Biomes.WINDSWEPT_HILLS)), List.of(new SpawnerData(TechnologicaEntityType.BEAVER.get(), 100, 1, 2), new SpawnerData(TechnologicaEntityType.GRIZZLY_BEAR.get(), 100, 1, 2), new SpawnerData(TechnologicaEntityType.MOOSE.get(), 100, 1, 2), new SpawnerData(TechnologicaEntityType.OWL.get(), 100, 1, 2))));
			});
	
	private static List<PlacementModifier> orePlacement(PlacementModifier p_195347_, PlacementModifier p_195348_) {
		return List.of(p_195347_, InSquarePlacement.spread(), p_195348_, BiomeFilter.biome());
	}
	
	private static List<PlacementModifier> commonOrePlacement(int p_195344_, PlacementModifier p_195345_) {
		return orePlacement(CountPlacement.of(p_195344_), p_195345_);
	}
}
