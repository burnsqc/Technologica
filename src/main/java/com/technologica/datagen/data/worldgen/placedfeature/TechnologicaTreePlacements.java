package com.technologica.datagen.data.worldgen.placedfeature;

import com.technologica.Technologica;
import com.technologica.datagen.data.worldgen.configuredfeature.TechnologicaTreeFeatures;
import com.technologica.world.level.block.TechnologicaBlocks;

import net.minecraft.core.Holder;
import net.minecraft.core.HolderGetter;
import net.minecraft.core.registries.Registries;
import net.minecraft.data.worldgen.BootstapContext;
import net.minecraft.data.worldgen.features.TreeFeatures;
import net.minecraft.data.worldgen.placement.PlacementUtils;
import net.minecraft.resources.ResourceKey;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.world.level.levelgen.feature.ConfiguredFeature;
import net.minecraft.world.level.levelgen.placement.PlacedFeature;

public class TechnologicaTreePlacements {
	public static final ResourceKey<PlacedFeature> APRICOT_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "apricot_checked"));
	public static final ResourceKey<PlacedFeature> ASPEN_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "aspen_checked"));
	public static final ResourceKey<PlacedFeature> AVOCADO_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "avocado_checked"));
	public static final ResourceKey<PlacedFeature> BANANA_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "banana_checked"));
	public static final ResourceKey<PlacedFeature> CHERRY_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "cherry_checked"));
	public static final ResourceKey<PlacedFeature> CHESTNUT_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "chestnut_checked"));
	public static final ResourceKey<PlacedFeature> CINNAMON_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "cinnamon_checked"));
	public static final ResourceKey<PlacedFeature> COCONUT_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "coconut_checked"));
	public static final ResourceKey<PlacedFeature> EBONY_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "ebony_checked"));
	public static final ResourceKey<PlacedFeature> KIWI_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "kiwi_checked"));
	public static final ResourceKey<PlacedFeature> LEMON_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "lemon_checked"));
	public static final ResourceKey<PlacedFeature> LIME_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "lime_checked"));
	public static final ResourceKey<PlacedFeature> MAHOGANY_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "mahogany_checked"));
	public static final ResourceKey<PlacedFeature> MAPLE_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "maple_checked"));
	public static final ResourceKey<PlacedFeature> OLIVE_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "olive_checked"));
	public static final ResourceKey<PlacedFeature> ORANGE_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "orange_checked"));
	public static final ResourceKey<PlacedFeature> PEACH_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "peach_checked"));
	public static final ResourceKey<PlacedFeature> PEAR_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "pear_checked"));
	public static final ResourceKey<PlacedFeature> PLUM_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "pulm_checked"));
	public static final ResourceKey<PlacedFeature> REDWOOD_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "redwood_checked"));
	public static final ResourceKey<PlacedFeature> ROSEWOOD_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "rosewood_checked"));
	public static final ResourceKey<PlacedFeature> RUBBER_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "rubber_checked"));
	public static final ResourceKey<PlacedFeature> TEAK_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "teak_checked"));
	public static final ResourceKey<PlacedFeature> WALNUT_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "walnut_checked"));
	public static final ResourceKey<PlacedFeature> ZEBRAWOOD_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "zebrawood_checked"));
	public static final ResourceKey<PlacedFeature> ANCIENT_AMBROSIA_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "ancient_ambrosia_checked"));
	public static final ResourceKey<PlacedFeature> BENEVOLENT_APOTHECARY_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "benevolent_apothecary_checked"));
	public static final ResourceKey<PlacedFeature> CRYOGENIC_SPIRE_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "cryogenic_spire_checked"));
	public static final ResourceKey<PlacedFeature> MALEVOLENT_APOTHECARY_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "malevolent_apothecary_checked"));
	public static final ResourceKey<PlacedFeature> NECROTIC_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "necrotic_checked"));
	public static final ResourceKey<PlacedFeature> SERENDIPITOUS_APOTHECARY_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "serendipitous_apothecary_checked"));
	public static final ResourceKey<PlacedFeature> THUNDEROUS_CONDUCTOR_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "thunderous_conductor_checked"));
	public static final ResourceKey<PlacedFeature> TOWERING_INFERNO_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "towering_inferno_checked"));
	public static final ResourceKey<PlacedFeature> OVERGROWTH_CHECKED = ResourceKey.create(Registries.PLACED_FEATURE, new ResourceLocation(Technologica.MODID, "overgrowth_checked"));

	public static void bootstrap(BootstapContext<PlacedFeature> p_255688_) {
		HolderGetter<ConfiguredFeature<?, ?>> holdergetter = p_255688_.lookup(Registries.CONFIGURED_FEATURE);
		Holder<ConfiguredFeature<?, ?>> holder = holdergetter.getOrThrow(TechnologicaTreeFeatures.APRICOT);
		Holder<ConfiguredFeature<?, ?>> holder1 = holdergetter.getOrThrow(TechnologicaTreeFeatures.ASPEN);
		Holder<ConfiguredFeature<?, ?>> holder2 = holdergetter.getOrThrow(TechnologicaTreeFeatures.AVOCADO);
		Holder<ConfiguredFeature<?, ?>> holder3 = holdergetter.getOrThrow(TechnologicaTreeFeatures.BANANA);
		Holder<ConfiguredFeature<?, ?>> holder4 = holdergetter.getOrThrow(TechnologicaTreeFeatures.CHERRY);
		Holder<ConfiguredFeature<?, ?>> holder5 = holdergetter.getOrThrow(TechnologicaTreeFeatures.CHESTNUT);
		Holder<ConfiguredFeature<?, ?>> holder6 = holdergetter.getOrThrow(TechnologicaTreeFeatures.CINNAMON);
		Holder<ConfiguredFeature<?, ?>> holder7 = holdergetter.getOrThrow(TechnologicaTreeFeatures.COCONUT);
		Holder<ConfiguredFeature<?, ?>> holder8 = holdergetter.getOrThrow(TechnologicaTreeFeatures.EBONY);
		Holder<ConfiguredFeature<?, ?>> holder9 = holdergetter.getOrThrow(TechnologicaTreeFeatures.KIWI);
		Holder<ConfiguredFeature<?, ?>> holder10 = holdergetter.getOrThrow(TechnologicaTreeFeatures.LEMON);
		Holder<ConfiguredFeature<?, ?>> holder11 = holdergetter.getOrThrow(TechnologicaTreeFeatures.LIME);
		Holder<ConfiguredFeature<?, ?>> holder12 = holdergetter.getOrThrow(TechnologicaTreeFeatures.MAHOGANY);
		Holder<ConfiguredFeature<?, ?>> holder13 = holdergetter.getOrThrow(TechnologicaTreeFeatures.MAPLE);
		Holder<ConfiguredFeature<?, ?>> holder14 = holdergetter.getOrThrow(TechnologicaTreeFeatures.OLIVE);
		Holder<ConfiguredFeature<?, ?>> holder15 = holdergetter.getOrThrow(TechnologicaTreeFeatures.ORANGE);
		Holder<ConfiguredFeature<?, ?>> holder16 = holdergetter.getOrThrow(TechnologicaTreeFeatures.PEACH);
		Holder<ConfiguredFeature<?, ?>> holder17 = holdergetter.getOrThrow(TechnologicaTreeFeatures.PEAR);
		Holder<ConfiguredFeature<?, ?>> holder18 = holdergetter.getOrThrow(TechnologicaTreeFeatures.PLUM);
		// Holder<ConfiguredFeature<?, ?>> holder19 = holdergetter.getOrThrow(TechnologicaTreeFeatures.REDWOOD);
		Holder<ConfiguredFeature<?, ?>> holder20 = holdergetter.getOrThrow(TechnologicaTreeFeatures.ROSEWOOD);
		Holder<ConfiguredFeature<?, ?>> holder21 = holdergetter.getOrThrow(TechnologicaTreeFeatures.RUBBER);
		Holder<ConfiguredFeature<?, ?>> holder22 = holdergetter.getOrThrow(TechnologicaTreeFeatures.TEAK);
		Holder<ConfiguredFeature<?, ?>> holder23 = holdergetter.getOrThrow(TechnologicaTreeFeatures.WALNUT);
		Holder<ConfiguredFeature<?, ?>> holder24 = holdergetter.getOrThrow(TechnologicaTreeFeatures.ZEBRAWOOD);
		Holder<ConfiguredFeature<?, ?>> holder25 = holdergetter.getOrThrow(TechnologicaTreeFeatures.ANCIENT_AMBROSIA);
		Holder<ConfiguredFeature<?, ?>> holder26 = holdergetter.getOrThrow(TechnologicaTreeFeatures.BENEVOLENT_APOTHECARY);
		Holder<ConfiguredFeature<?, ?>> holder27 = holdergetter.getOrThrow(TechnologicaTreeFeatures.CRYOGENIC_SPIRE);
		Holder<ConfiguredFeature<?, ?>> holder28 = holdergetter.getOrThrow(TechnologicaTreeFeatures.MALEVOLENT_APOTHECARY);
		Holder<ConfiguredFeature<?, ?>> holder29 = holdergetter.getOrThrow(TechnologicaTreeFeatures.NECROTIC);
		Holder<ConfiguredFeature<?, ?>> holder30 = holdergetter.getOrThrow(TechnologicaTreeFeatures.SERENDIPITOUS_APOTHECARY);
		Holder<ConfiguredFeature<?, ?>> holder31 = holdergetter.getOrThrow(TechnologicaTreeFeatures.THUNDEROUS_CONDUCTOR);
		Holder<ConfiguredFeature<?, ?>> holder32 = holdergetter.getOrThrow(TechnologicaTreeFeatures.TOWERING_INFERNO);
		Holder<ConfiguredFeature<?, ?>> holder33 = holdergetter.getOrThrow(TreeFeatures.TALL_MANGROVE);
		PlacementUtils.register(p_255688_, APRICOT_CHECKED, holder, PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.APRICOT_SAPLING.get()));
		PlacementUtils.register(p_255688_, ASPEN_CHECKED, holder1, PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.ASPEN_SAPLING.get()));
		PlacementUtils.register(p_255688_, AVOCADO_CHECKED, holder2, PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.AVOCADO_SAPLING.get()));
		PlacementUtils.register(p_255688_, BANANA_CHECKED, holder3, PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.BANANA_SAPLING.get()));
		PlacementUtils.register(p_255688_, CHERRY_CHECKED, holder4, PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.CHERRY_SAPLING.get()));
		PlacementUtils.register(p_255688_, CHESTNUT_CHECKED, holder5, PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.CHESTNUT_SAPLING.get()));
		PlacementUtils.register(p_255688_, CINNAMON_CHECKED, holder6, PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.CINNAMON_SAPLING.get()));
		PlacementUtils.register(p_255688_, COCONUT_CHECKED, holder7, PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.COCONUT_SAPLING.get()));
		PlacementUtils.register(p_255688_, EBONY_CHECKED, holder8, PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.EBONY_SAPLING.get()));
		PlacementUtils.register(p_255688_, KIWI_CHECKED, holder9, PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.KIWI_SAPLING.get()));
		PlacementUtils.register(p_255688_, LEMON_CHECKED, holder10, PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.LEMON_SAPLING.get()));
		PlacementUtils.register(p_255688_, LIME_CHECKED, holder11, PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.LIME_SAPLING.get()));
		PlacementUtils.register(p_255688_, MAHOGANY_CHECKED, holder12, PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.MAHOGANY_SAPLING.get()));
		PlacementUtils.register(p_255688_, MAPLE_CHECKED, holder13, PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.MAPLE_SAPLING.get()));
		PlacementUtils.register(p_255688_, OLIVE_CHECKED, holder14, PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.OLIVE_SAPLING.get()));
		PlacementUtils.register(p_255688_, ORANGE_CHECKED, holder15, PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.ORANGE_SAPLING.get()));
		PlacementUtils.register(p_255688_, PEACH_CHECKED, holder16, PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.PEACH_SAPLING.get()));
		PlacementUtils.register(p_255688_, PEAR_CHECKED, holder17, PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.PEAR_SAPLING.get()));
		PlacementUtils.register(p_255688_, PLUM_CHECKED, holder18, PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.PLUM_SAPLING.get()));
		// PlacementUtils.register(p_255688_, REDWOOD_CHECKED, holder19, PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.REDWOOD_SAPLING.get()));
		PlacementUtils.register(p_255688_, ROSEWOOD_CHECKED, holder20, PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.ROSEWOOD_SAPLING.get()));
		PlacementUtils.register(p_255688_, RUBBER_CHECKED, holder21, PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.RUBBER_SAPLING.get()));
		PlacementUtils.register(p_255688_, TEAK_CHECKED, holder22, PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.TEAK_SAPLING.get()));
		PlacementUtils.register(p_255688_, WALNUT_CHECKED, holder23, PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.WALNUT_SAPLING.get()));
		PlacementUtils.register(p_255688_, ZEBRAWOOD_CHECKED, holder24, PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.ZEBRAWOOD_SAPLING.get()));
		PlacementUtils.register(p_255688_, ANCIENT_AMBROSIA_CHECKED, holder25, PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.ANCIENT_AMBROSIA_SAPLING.get()));
		PlacementUtils.register(p_255688_, BENEVOLENT_APOTHECARY_CHECKED, holder26, PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.BENEVOLENT_APOTHECARY_SAPLING.get()));
		PlacementUtils.register(p_255688_, CRYOGENIC_SPIRE_CHECKED, holder27, PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.CRYOGENIC_SPIRE_SAPLING.get()));
		PlacementUtils.register(p_255688_, MALEVOLENT_APOTHECARY_CHECKED, holder28, PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.MALEVOLENT_APOTHECARY_SAPLING.get()));
		PlacementUtils.register(p_255688_, NECROTIC_CHECKED, holder29, PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.NECROTIC_SAPLING.get()));
		PlacementUtils.register(p_255688_, SERENDIPITOUS_APOTHECARY_CHECKED, holder30, PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.SERENDIPITOUS_APOTHECARY_SAPLING.get()));
		PlacementUtils.register(p_255688_, THUNDEROUS_CONDUCTOR_CHECKED, holder31, PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.THUNDEROUS_CONDUCTOR_SAPLING.get()));
		PlacementUtils.register(p_255688_, TOWERING_INFERNO_CHECKED, holder32, PlacementUtils.filteredByBlockSurvival(TechnologicaBlocks.TOWERING_INFERNO_SAPLING.get()));
		PlacementUtils.register(p_255688_, OVERGROWTH_CHECKED, holder33);
	}
}