package com.technologica.datagen.data.worldgen.configuredfeature;

import java.util.List;

import com.technologica.Technologica;
import com.technologica.world.level.block.TechnologicaBlocks;
import com.technologica.world.level.levelgen.feature.TechnologicaFeature;

import net.minecraft.core.registries.Registries;
import net.minecraft.data.worldgen.BootstapContext;
import net.minecraft.data.worldgen.features.FeatureUtils;
import net.minecraft.resources.ResourceKey;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.tags.BlockTags;
import net.minecraft.world.level.block.Blocks;
import net.minecraft.world.level.levelgen.feature.ConfiguredFeature;
import net.minecraft.world.level.levelgen.feature.Feature;
import net.minecraft.world.level.levelgen.feature.configurations.OreConfiguration;
import net.minecraft.world.level.levelgen.structure.templatesystem.RuleTest;
import net.minecraft.world.level.levelgen.structure.templatesystem.TagMatchTest;

public class TechnologicaOreFeatures {
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_SPODUMENE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_spodumene"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_BORAX = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_borax"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_MAGNESITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_magnesite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_BAUXITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_bauxite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_APATITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_apatite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_PHOSPHORITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_phosphorite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_GADOLINITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_gadolinite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_ILMENITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_ilmenite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_PATRONITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_patronite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_CHROMITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_chromite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_PYROLUSITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_pyrolusite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_COBALTITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_cobaltite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_GARNIERITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_garnierite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_ARSENOPYRITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_arsenopyrite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_CROOKESITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_crookesite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_LEPIDOLITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_lepidolite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_BASTNAESITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_bastnaesite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_TANTALITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_tantalite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_MOLYBDENITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_molybdenite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_PENTLANDITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_pentlandite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_ARGENTITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_argentite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_GALENA = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_galena"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_SYLVANITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_sylvanite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_CASSITERITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_cassiterite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_WOLFRAMITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_wolframite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_OSMIRIDIUM = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_osmiridium"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_PLATINUM = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_platinum"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_CINNABAR = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_cinnabar"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_THORIANITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_thorianite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_URANINITE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_uraninite"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_EMERALD = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_emerald"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_RUBY = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_ruby"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_SAPPHIRE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_sapphire"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORE_TOPAZ = ResourceKey.create(Registries.CONFIGURED_FEATURE, new ResourceLocation(Technologica.MODID, "ore_topaz"));

	public static void bootstrap(BootstapContext<ConfiguredFeature<?, ?>> p_256319_) {
		// RuleTest ruletest = new TagMatchTest(BlockTags.BASE_STONE_OVERWORLD);
		RuleTest ruletest1 = new TagMatchTest(BlockTags.STONE_ORE_REPLACEABLES);
		RuleTest ruletest2 = new TagMatchTest(BlockTags.DEEPSLATE_ORE_REPLACEABLES);
		// RuleTest ruletest3 = new BlockMatchTest(Blocks.NETHERRACK);
		// RuleTest ruletest4 = new TagMatchTest(BlockTags.BASE_STONE_NETHER);
		List<OreConfiguration.TargetBlockState> ORE_SPODUMENE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.SPODUMENE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_SPODUMENE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_BORAX_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.BORAX_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_BORAX_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_MAGNESITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.MAGNESITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_MAGNESITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_BAUXITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.BAUXITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_BAUXITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_APATITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.APATITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_APATITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_PHOSPHORITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.PHOSPHORITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_PHOSPHORITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_GADOLINITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.GADOLINITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_GADOLINITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_ILMENITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.ILMENITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_ILMENITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_PATRONITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.PATRONITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_PATRONITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_CHROMITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.CHROMITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_CHROMITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_PYROLUSITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.PYROLUSITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_PYROLUSITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_COBALTITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.COBALTITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_COBALTITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_GARNIERITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.GARNIERITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_GARNIERITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_ARSENOPYRITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.ARSENOPYRITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_ARSENOPYRITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_CROOKESITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.CROOKESITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_CROOKESITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_LEPIDOLITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.LEPIDOLITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_LEPIDOLITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_BASTNAESITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.BASTNAESITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_BASTNAESITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_TANTALITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.TANTALITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_TANTALITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_MOLYBDENITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.MOLYBDENITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_MOLYBDENITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_PENTLANDITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.PENTLANDITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_PENTLANDITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_ARGENTITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.ARGENTITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_ARGENTITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_GALENA_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.GALENA_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_GALENA_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_SYLVANITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.SYLVANITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_SYLVANITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_CASSITERITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.CASSITERITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_CASSITERITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_WOLFRAMITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.WOLFRAMITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_WOLFRAMITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_OSMIRIDIUM_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.OSMIRIDIUM_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_OSMIRIDIUM_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_PLATINUM_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.PLATINUM_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_PLATINUM_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_CINNABAR_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.CINNABAR_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_CINNABAR_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_THORIANITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.THORIANITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_THORIANITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_URANINITE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.URANINITE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_URANINITE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_EMERALD_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, Blocks.EMERALD_ORE.defaultBlockState()), OreConfiguration.target(ruletest2, Blocks.DEEPSLATE_EMERALD_ORE.defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_RUBY_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.RUBY_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_RUBY_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_SAPPHIRE_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.SAPPHIRE_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_SAPPHIRE_ORE.get().defaultBlockState()));
		List<OreConfiguration.TargetBlockState> ORE_TOPAZ_TARGET_LIST = List.of(OreConfiguration.target(ruletest1, TechnologicaBlocks.TOPAZ_ORE.get().defaultBlockState()), OreConfiguration.target(ruletest2, TechnologicaBlocks.DEEPSLATE_TOPAZ_ORE.get().defaultBlockState()));
		FeatureUtils.register(p_256319_, ORE_SPODUMENE, TechnologicaFeature.POLLUCITE_DECORATED_ORE.get(), new OreConfiguration(ORE_SPODUMENE_TARGET_LIST, 8));
		FeatureUtils.register(p_256319_, ORE_BORAX, TechnologicaFeature.ULEXITE_DECORATED_ORE.get(), new OreConfiguration(ORE_BORAX_TARGET_LIST, 8));
		FeatureUtils.register(p_256319_, ORE_MAGNESITE, TechnologicaFeature.DOLOMITE_DECORATED_ORE.get(), new OreConfiguration(ORE_MAGNESITE_TARGET_LIST, 8));
		FeatureUtils.register(p_256319_, ORE_BAUXITE, Feature.ORE, new OreConfiguration(ORE_BAUXITE_TARGET_LIST, 8));
		FeatureUtils.register(p_256319_, ORE_APATITE, TechnologicaFeature.FLUORITE_DECORATED_ORE.get(), new OreConfiguration(ORE_APATITE_TARGET_LIST, 8));
		FeatureUtils.register(p_256319_, ORE_PHOSPHORITE, TechnologicaFeature.CELESTINE_DECORATED_ORE.get(), new OreConfiguration(ORE_PHOSPHORITE_TARGET_LIST, 8));
		FeatureUtils.register(p_256319_, ORE_GADOLINITE, TechnologicaFeature.XENOTIME_DECORATED_ORE.get(), new OreConfiguration(ORE_GADOLINITE_TARGET_LIST, 4));
		FeatureUtils.register(p_256319_, ORE_ILMENITE, TechnologicaFeature.RUTILE_DECORATED_ORE.get(), new OreConfiguration(ORE_ILMENITE_TARGET_LIST, 8));
		FeatureUtils.register(p_256319_, ORE_PATRONITE, TechnologicaFeature.VANADANITE_DECORATED_ORE.get(), new OreConfiguration(ORE_PATRONITE_TARGET_LIST, 8));
		FeatureUtils.register(p_256319_, ORE_CHROMITE, TechnologicaFeature.ZIRCON_DECORATED_ORE.get(), new OreConfiguration(ORE_CHROMITE_TARGET_LIST, 8));
		FeatureUtils.register(p_256319_, ORE_PYROLUSITE, Feature.ORE, new OreConfiguration(ORE_PYROLUSITE_TARGET_LIST, 8));
		FeatureUtils.register(p_256319_, ORE_COBALTITE, Feature.ORE, new OreConfiguration(ORE_COBALTITE_TARGET_LIST, 8));
		FeatureUtils.register(p_256319_, ORE_GARNIERITE, Feature.ORE, new OreConfiguration(ORE_GARNIERITE_TARGET_LIST, 8));
		FeatureUtils.register(p_256319_, ORE_ARSENOPYRITE, TechnologicaFeature.SPHALERITE_DECORATED_ORE.get(), new OreConfiguration(ORE_ARSENOPYRITE_TARGET_LIST, 8));
		FeatureUtils.register(p_256319_, ORE_CROOKESITE, TechnologicaFeature.HUTCHINSONITE_DECORATED_ORE.get(), new OreConfiguration(ORE_CROOKESITE_TARGET_LIST, 8));
		FeatureUtils.register(p_256319_, ORE_LEPIDOLITE, TechnologicaFeature.STRONTIANITE_DECORATED_ORE.get(), new OreConfiguration(ORE_LEPIDOLITE_TARGET_LIST, 8));
		FeatureUtils.register(p_256319_, ORE_BASTNAESITE, TechnologicaFeature.MONAZITE_DECORATED_ORE.get(), new OreConfiguration(ORE_BASTNAESITE_TARGET_LIST, 4));
		FeatureUtils.register(p_256319_, ORE_TANTALITE, TechnologicaFeature.COLUMBITE_DECORATED_ORE.get(), new OreConfiguration(ORE_TANTALITE_TARGET_LIST, 4));
		FeatureUtils.register(p_256319_, ORE_MOLYBDENITE, TechnologicaFeature.WULFENITE_DECORATED_ORE.get(), new OreConfiguration(ORE_MOLYBDENITE_TARGET_LIST, 8));
		FeatureUtils.register(p_256319_, ORE_PENTLANDITE, Feature.ORE, new OreConfiguration(ORE_PENTLANDITE_TARGET_LIST, 8));
		FeatureUtils.register(p_256319_, ORE_ARGENTITE, Feature.ORE, new OreConfiguration(ORE_ARGENTITE_TARGET_LIST, 8));
		FeatureUtils.register(p_256319_, ORE_GALENA, TechnologicaFeature.BARYTE_DECORATED_ORE.get(), new OreConfiguration(ORE_GALENA_TARGET_LIST, 8));
		FeatureUtils.register(p_256319_, ORE_SYLVANITE, TechnologicaFeature.TELLURITE_DECORATED_ORE.get(), new OreConfiguration(ORE_SYLVANITE_TARGET_LIST, 4));
		FeatureUtils.register(p_256319_, ORE_CASSITERITE, TechnologicaFeature.BISMITHUNITE_DECORATED_ORE.get(), new OreConfiguration(ORE_CASSITERITE_TARGET_LIST, 8));
		FeatureUtils.register(p_256319_, ORE_WOLFRAMITE, TechnologicaFeature.SCHEELITE_DECORATED_ORE.get(), new OreConfiguration(ORE_WOLFRAMITE_TARGET_LIST, 8));
		FeatureUtils.register(p_256319_, ORE_OSMIRIDIUM, Feature.ORE, new OreConfiguration(ORE_OSMIRIDIUM_TARGET_LIST, 4));
		FeatureUtils.register(p_256319_, ORE_PLATINUM, Feature.ORE, new OreConfiguration(ORE_PLATINUM_TARGET_LIST, 4));
		FeatureUtils.register(p_256319_, ORE_CINNABAR, TechnologicaFeature.STIBNITE_DECORATED_ORE.get(), new OreConfiguration(ORE_CINNABAR_TARGET_LIST, 8));
		FeatureUtils.register(p_256319_, ORE_THORIANITE, TechnologicaFeature.AUTUNITE_DECORATED_ORE.get(), new OreConfiguration(ORE_THORIANITE_TARGET_LIST, 8));
		FeatureUtils.register(p_256319_, ORE_URANINITE, TechnologicaFeature.AUTUNITE_DECORATED_ORE.get(), new OreConfiguration(ORE_URANINITE_TARGET_LIST, 8));
		FeatureUtils.register(p_256319_, ORE_EMERALD, TechnologicaFeature.AQUAMARINE_DECORATED_ORE.get(), new OreConfiguration(ORE_EMERALD_TARGET_LIST, 3));
		FeatureUtils.register(p_256319_, ORE_RUBY, Feature.ORE, new OreConfiguration(ORE_RUBY_TARGET_LIST, 3));
		FeatureUtils.register(p_256319_, ORE_SAPPHIRE, Feature.ORE, new OreConfiguration(ORE_SAPPHIRE_TARGET_LIST, 3));
		FeatureUtils.register(p_256319_, ORE_TOPAZ, Feature.ORE, new OreConfiguration(ORE_TOPAZ_TARGET_LIST, 3));
	}

}
