package com.technologica.datagen.data.worldgen.configuredfeature;

import com.technologica.util.text.TechnologicaLocation;
import com.technologica.world.level.block.TechnologicaBlocks;
import com.technologica.world.level.levelgen.feature.foliageplacers.ConicalFoliagePlacer;
import com.technologica.world.level.levelgen.feature.foliageplacers.DishFoliagePlacer;
import com.technologica.world.level.levelgen.feature.foliageplacers.PalmFoliagePlacer;
import com.technologica.world.level.levelgen.feature.foliageplacers.TeardropFoliagePlacer;

import net.minecraft.core.registries.Registries;
import net.minecraft.data.worldgen.BootstapContext;
import net.minecraft.data.worldgen.features.FeatureUtils;
import net.minecraft.resources.ResourceKey;
import net.minecraft.util.valueproviders.ConstantInt;
import net.minecraft.util.valueproviders.UniformInt;
import net.minecraft.world.level.block.Blocks;
import net.minecraft.world.level.levelgen.feature.ConfiguredFeature;
import net.minecraft.world.level.levelgen.feature.Feature;
import net.minecraft.world.level.levelgen.feature.configurations.TreeConfiguration;
import net.minecraft.world.level.levelgen.feature.featuresize.TwoLayersFeatureSize;
import net.minecraft.world.level.levelgen.feature.foliageplacers.AcaciaFoliagePlacer;
import net.minecraft.world.level.levelgen.feature.foliageplacers.BlobFoliagePlacer;
import net.minecraft.world.level.levelgen.feature.foliageplacers.MegaPineFoliagePlacer;
import net.minecraft.world.level.levelgen.feature.stateproviders.BlockStateProvider;
import net.minecraft.world.level.levelgen.feature.trunkplacers.StraightTrunkPlacer;

public class TechnologicaTreeFeatures {
	public static final ResourceKey<ConfiguredFeature<?, ?>> APRICOT = ResourceKey.create(Registries.CONFIGURED_FEATURE, new TechnologicaLocation("apricot"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ASPEN = ResourceKey.create(Registries.CONFIGURED_FEATURE, new TechnologicaLocation("aspen"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> AVOCADO = ResourceKey.create(Registries.CONFIGURED_FEATURE, new TechnologicaLocation("avocado"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> BANANA = ResourceKey.create(Registries.CONFIGURED_FEATURE, new TechnologicaLocation("banana"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> CHERRY = ResourceKey.create(Registries.CONFIGURED_FEATURE, new TechnologicaLocation("cherry"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> CHESTNUT = ResourceKey.create(Registries.CONFIGURED_FEATURE, new TechnologicaLocation("chestnut"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> CINNAMON = ResourceKey.create(Registries.CONFIGURED_FEATURE, new TechnologicaLocation("cinnamon"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> COCONUT = ResourceKey.create(Registries.CONFIGURED_FEATURE, new TechnologicaLocation("coconut"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> EBONY = ResourceKey.create(Registries.CONFIGURED_FEATURE, new TechnologicaLocation("ebony"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> KIWI = ResourceKey.create(Registries.CONFIGURED_FEATURE, new TechnologicaLocation("kiwi"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> LEMON = ResourceKey.create(Registries.CONFIGURED_FEATURE, new TechnologicaLocation("lemon"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> LIME = ResourceKey.create(Registries.CONFIGURED_FEATURE, new TechnologicaLocation("lime"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> MAHOGANY = ResourceKey.create(Registries.CONFIGURED_FEATURE, new TechnologicaLocation("mahogany"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> MAPLE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new TechnologicaLocation("maple"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> OLIVE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new TechnologicaLocation("olive"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ORANGE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new TechnologicaLocation("orange"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> PEACH = ResourceKey.create(Registries.CONFIGURED_FEATURE, new TechnologicaLocation("peach"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> PEAR = ResourceKey.create(Registries.CONFIGURED_FEATURE, new TechnologicaLocation("pear"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> PLUM = ResourceKey.create(Registries.CONFIGURED_FEATURE, new TechnologicaLocation("plum"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> REDWOOD = ResourceKey.create(Registries.CONFIGURED_FEATURE, new TechnologicaLocation("redwood"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ROSEWOOD = ResourceKey.create(Registries.CONFIGURED_FEATURE, new TechnologicaLocation("rosewood"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> RUBBER = ResourceKey.create(Registries.CONFIGURED_FEATURE, new TechnologicaLocation("rubber"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> TEAK = ResourceKey.create(Registries.CONFIGURED_FEATURE, new TechnologicaLocation("teak"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> WALNUT = ResourceKey.create(Registries.CONFIGURED_FEATURE, new TechnologicaLocation("walnut"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ZEBRAWOOD = ResourceKey.create(Registries.CONFIGURED_FEATURE, new TechnologicaLocation("zebrawood"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> ANCIENT_AMBROSIA = ResourceKey.create(Registries.CONFIGURED_FEATURE, new TechnologicaLocation("ancient_ambrosia"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> BENEVOLENT_APOTHECARY = ResourceKey.create(Registries.CONFIGURED_FEATURE, new TechnologicaLocation("benevolent_apothecary"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> CRYOGENIC_SPIRE = ResourceKey.create(Registries.CONFIGURED_FEATURE, new TechnologicaLocation("cryogenic_spire"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> MALEVOLENT_APOTHECARY = ResourceKey.create(Registries.CONFIGURED_FEATURE, new TechnologicaLocation("malevolent_apothecary"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> NECROTIC = ResourceKey.create(Registries.CONFIGURED_FEATURE, new TechnologicaLocation("necrotic"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> SERENDIPITOUS_APOTHECARY = ResourceKey.create(Registries.CONFIGURED_FEATURE, new TechnologicaLocation("serendipitous_apothecary"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> THUNDEROUS_CONDUCTOR = ResourceKey.create(Registries.CONFIGURED_FEATURE, new TechnologicaLocation("thunderous_conductor"));
	public static final ResourceKey<ConfiguredFeature<?, ?>> TOWERING_INFERNO = ResourceKey.create(Registries.CONFIGURED_FEATURE, new TechnologicaLocation("towering_inferno"));

	public static void bootstrap(BootstapContext<ConfiguredFeature<?, ?>> p_256317_) {
		FeatureUtils.register(p_256317_, APRICOT, Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.APRICOT_LOG.get().defaultBlockState()), new StraightTrunkPlacer(4, 1, 0), BlockStateProvider.simple(TechnologicaBlocks.APRICOT_LEAVES.get().defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(0), ConstantInt.of(0)), new TwoLayersFeatureSize(1, 0, 2)).ignoreVines().build());
		FeatureUtils.register(p_256317_, ASPEN, Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.ASPEN_LOG.get().defaultBlockState()), new StraightTrunkPlacer(6, 2, 0), BlockStateProvider.simple(TechnologicaBlocks.ASPEN_LEAVES.get().defaultBlockState()), new TeardropFoliagePlacer(ConstantInt.of(2), ConstantInt.of(0), 6), new TwoLayersFeatureSize(1, 0, 1)).ignoreVines().build());
		FeatureUtils.register(p_256317_, AVOCADO, Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.AVOCADO_LOG.get().defaultBlockState()), new StraightTrunkPlacer(4, 1, 0), BlockStateProvider.simple(TechnologicaBlocks.AVOCADO_LEAVES.get().defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(0), ConstantInt.of(0)), new TwoLayersFeatureSize(1, 0, 2)).ignoreVines().build());
		FeatureUtils.register(p_256317_, BANANA, Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.BANANA_LOG.get().defaultBlockState()), new StraightTrunkPlacer(5, 2, 0), BlockStateProvider.simple(TechnologicaBlocks.BANANA_LEAVES.get().defaultBlockState()), new PalmFoliagePlacer(ConstantInt.of(4), ConstantInt.of(1)), new TwoLayersFeatureSize(1, 0, 1)).ignoreVines().build());
		FeatureUtils.register(p_256317_, CHERRY, Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.CHERRY_LOG.get().defaultBlockState()), new StraightTrunkPlacer(5, 2, 0), BlockStateProvider.simple(TechnologicaBlocks.CHERRY_LEAVES.get().defaultBlockState()), new BlobFoliagePlacer(ConstantInt.of(2), ConstantInt.of(0), 3), new TwoLayersFeatureSize(1, 0, 1)).ignoreVines().build());
		FeatureUtils.register(p_256317_, CHESTNUT, Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.CHESTNUT_LOG.get().defaultBlockState()), new StraightTrunkPlacer(4, 1, 0), BlockStateProvider.simple(TechnologicaBlocks.CHESTNUT_LEAVES.get().defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(0), ConstantInt.of(0)), new TwoLayersFeatureSize(1, 0, 2)).ignoreVines().build());
		FeatureUtils.register(p_256317_, CINNAMON, Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.CINNAMON_LOG.get().defaultBlockState()), new StraightTrunkPlacer(4, 1, 0), BlockStateProvider.simple(TechnologicaBlocks.CINNAMON_LEAVES.get().defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(0), ConstantInt.of(0)), new TwoLayersFeatureSize(1, 0, 2)).ignoreVines().build());
		FeatureUtils.register(p_256317_, COCONUT, Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.COCONUT_LOG.get().defaultBlockState()), new StraightTrunkPlacer(7, 5, 0), BlockStateProvider.simple(TechnologicaBlocks.COCONUT_LEAVES.get().defaultBlockState()), new PalmFoliagePlacer(ConstantInt.of(5), ConstantInt.of(1)), new TwoLayersFeatureSize(0, 0, 0)).ignoreVines().build());
		FeatureUtils.register(p_256317_, EBONY, Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.EBONY_LOG.get().defaultBlockState()), new StraightTrunkPlacer(4, 1, 0), BlockStateProvider.simple(TechnologicaBlocks.EBONY_LEAVES.get().defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(0), ConstantInt.of(0)), new TwoLayersFeatureSize(1, 0, 2)).ignoreVines().build());
		FeatureUtils.register(p_256317_, KIWI, Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.KIWI_LOG.get().defaultBlockState()), new StraightTrunkPlacer(3, 1, 0), BlockStateProvider.simple(TechnologicaBlocks.KIWI_LEAVES.get().defaultBlockState()), new AcaciaFoliagePlacer(ConstantInt.of(3), ConstantInt.of(0)), new TwoLayersFeatureSize(1, 0, 2)).ignoreVines().build());
		FeatureUtils.register(p_256317_, LEMON, Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.LEMON_LOG.get().defaultBlockState()), new StraightTrunkPlacer(2, 2, 0), BlockStateProvider.simple(TechnologicaBlocks.LEMON_LEAVES.get().defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(0), ConstantInt.of(0)), new TwoLayersFeatureSize(1, 0, 2)).ignoreVines().build());
		FeatureUtils.register(p_256317_, LIME, Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.LIME_LOG.get().defaultBlockState()), new StraightTrunkPlacer(2, 2, 0), BlockStateProvider.simple(TechnologicaBlocks.LIME_LEAVES.get().defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(0), ConstantInt.of(0)), new TwoLayersFeatureSize(1, 0, 2)).ignoreVines().build());
		FeatureUtils.register(p_256317_, MAHOGANY, Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.MAHOGANY_LOG.get().defaultBlockState()), new StraightTrunkPlacer(4, 1, 0), BlockStateProvider.simple(TechnologicaBlocks.MAHOGANY_LEAVES.get().defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(0), ConstantInt.of(0)), new TwoLayersFeatureSize(1, 0, 2)).ignoreVines().build());
		FeatureUtils.register(p_256317_, MAPLE, Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.MAPLE_LOG.get().defaultBlockState()), new StraightTrunkPlacer(4, 1, 0), BlockStateProvider.simple(TechnologicaBlocks.MAPLE_LEAVES.get().defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(0), ConstantInt.of(0)), new TwoLayersFeatureSize(1, 0, 2)).ignoreVines().build());
		FeatureUtils.register(p_256317_, OLIVE, Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.OLIVE_LOG.get().defaultBlockState()), new StraightTrunkPlacer(4, 1, 0), BlockStateProvider.simple(TechnologicaBlocks.OLIVE_LEAVES.get().defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(0), ConstantInt.of(0)), new TwoLayersFeatureSize(1, 0, 2)).ignoreVines().build());
		FeatureUtils.register(p_256317_, ORANGE, Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.ORANGE_LOG.get().defaultBlockState()), new StraightTrunkPlacer(4, 1, 0), BlockStateProvider.simple(TechnologicaBlocks.ORANGE_LEAVES.get().defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(0), ConstantInt.of(0)), new TwoLayersFeatureSize(1, 0, 2)).ignoreVines().build());
		FeatureUtils.register(p_256317_, PEACH, Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.PEACH_LOG.get().defaultBlockState()), new StraightTrunkPlacer(5, 2, 0), BlockStateProvider.simple(TechnologicaBlocks.PEACH_LEAVES.get().defaultBlockState()), new BlobFoliagePlacer(ConstantInt.of(2), ConstantInt.of(0), 3), new TwoLayersFeatureSize(1, 0, 2)).ignoreVines().build());
		FeatureUtils.register(p_256317_, PEAR, Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.PEAR_LOG.get().defaultBlockState()), new StraightTrunkPlacer(5, 2, 0), BlockStateProvider.simple(TechnologicaBlocks.PEAR_LEAVES.get().defaultBlockState()), new TeardropFoliagePlacer(ConstantInt.of(2), ConstantInt.of(0), 6), new TwoLayersFeatureSize(1, 0, 1)).ignoreVines().build());
		FeatureUtils.register(p_256317_, PLUM, Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.PLUM_LOG.get().defaultBlockState()), new StraightTrunkPlacer(4, 1, 0), BlockStateProvider.simple(TechnologicaBlocks.PLUM_LEAVES.get().defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(0), ConstantInt.of(0)), new TwoLayersFeatureSize(1, 0, 2)).ignoreVines().build());
		// FeatureUtils.register(p_256317_, REDWOOD, Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.REDWOOD_LOG.get().defaultBlockState()), new ThreeWideTrunkPlacer(18, 5, 19), BlockStateProvider.simple(TechnologicaBlocks.REDWOOD_LEAVES.get().defaultBlockState()), new RedwoodFoliagePlacer(ConstantInt.of(4), ConstantInt.of(7)), new TwoLayersFeatureSize(1, 0, 2)).ignoreVines().build());
		FeatureUtils.register(p_256317_, ROSEWOOD, Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.ROSEWOOD_LOG.get().defaultBlockState()), new StraightTrunkPlacer(4, 1, 0), BlockStateProvider.simple(TechnologicaBlocks.ROSEWOOD_LEAVES.get().defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(0), ConstantInt.of(0)), new TwoLayersFeatureSize(1, 0, 2)).ignoreVines().build());
		FeatureUtils.register(p_256317_, RUBBER, Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.RUBBER_LOG.get().defaultBlockState()), new StraightTrunkPlacer(4, 1, 0), BlockStateProvider.simple(TechnologicaBlocks.RUBBER_LEAVES.get().defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(0), ConstantInt.of(0)), new TwoLayersFeatureSize(1, 0, 2)).ignoreVines().build());
		FeatureUtils.register(p_256317_, TEAK, Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.TEAK_LOG.get().defaultBlockState()), new StraightTrunkPlacer(4, 1, 0), BlockStateProvider.simple(TechnologicaBlocks.TEAK_LEAVES.get().defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(0), ConstantInt.of(0)), new TwoLayersFeatureSize(1, 0, 2)).ignoreVines().build());
		FeatureUtils.register(p_256317_, WALNUT, Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.WALNUT_LOG.get().defaultBlockState()), new StraightTrunkPlacer(4, 1, 0), BlockStateProvider.simple(TechnologicaBlocks.WALNUT_LEAVES.get().defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(0), ConstantInt.of(0)), new TwoLayersFeatureSize(1, 0, 2)).ignoreVines().build());
		FeatureUtils.register(p_256317_, ZEBRAWOOD, Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.ZEBRAWOOD_LOG.get().defaultBlockState()), new StraightTrunkPlacer(4, 1, 0), BlockStateProvider.simple(TechnologicaBlocks.ZEBRAWOOD_LEAVES.get().defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(0), ConstantInt.of(0)), new TwoLayersFeatureSize(1, 0, 2)).ignoreVines().build());
		FeatureUtils.register(p_256317_, ANCIENT_AMBROSIA, Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.FRUITFUL_LOG.get().defaultBlockState()), new StraightTrunkPlacer(4, 1, 0), BlockStateProvider.simple(TechnologicaBlocks.FRUITFUL_LEAVES.get().defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(0), ConstantInt.of(0)), new TwoLayersFeatureSize(0, 0, 0)).ignoreVines().build());
		FeatureUtils.register(p_256317_, BENEVOLENT_APOTHECARY, Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.BENEVOLENT_LOG.get().defaultBlockState()), new StraightTrunkPlacer(4, 1, 0), BlockStateProvider.simple(TechnologicaBlocks.BENEVOLENT_LEAVES.get().defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(0), ConstantInt.of(0)), new TwoLayersFeatureSize(0, 0, 0)).ignoreVines().build());
		FeatureUtils.register(p_256317_, CRYOGENIC_SPIRE, Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.FROSTBITTEN_LOG.get().defaultBlockState()), new StraightTrunkPlacer(10, 10, 0), BlockStateProvider.simple(TechnologicaBlocks.FROSTBITTEN_LEAVES.get().defaultBlockState()), new MegaPineFoliagePlacer(ConstantInt.of(0), ConstantInt.of(5), UniformInt.of(4, 13)), new TwoLayersFeatureSize(0, 0, 0)).ignoreVines().build());
		FeatureUtils.register(p_256317_, MALEVOLENT_APOTHECARY, Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.MALEVOLENT_LOG.get().defaultBlockState()), new StraightTrunkPlacer(4, 1, 0), BlockStateProvider.simple(TechnologicaBlocks.MALEVOLENT_LEAVES.get().defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(0), ConstantInt.of(0)), new TwoLayersFeatureSize(0, 0, 0)).ignoreVines().build());
		FeatureUtils.register(p_256317_, NECROTIC, Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.NECROTIC_LOG.get().defaultBlockState()), new StraightTrunkPlacer(4, 1, 0), BlockStateProvider.simple(TechnologicaBlocks.CURSED_LEAVES.get().defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(0), ConstantInt.of(0)), new TwoLayersFeatureSize(0, 0, 0)).ignoreVines().build());
		FeatureUtils.register(p_256317_, SERENDIPITOUS_APOTHECARY, Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.ALCHEMICAL_LOG.get().defaultBlockState()), new StraightTrunkPlacer(4, 1, 0), BlockStateProvider.simple(TechnologicaBlocks.ALCHEMICAL_LEAVES.get().defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(0), ConstantInt.of(0)), new TwoLayersFeatureSize(0, 0, 0)).ignoreVines().build());
		FeatureUtils.register(p_256317_, THUNDEROUS_CONDUCTOR, Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.CONDUCTIVE_LOG.get().defaultBlockState()), new StraightTrunkPlacer(10, 10, 0), BlockStateProvider.simple(TechnologicaBlocks.CONDUCTIVE_LEAVES.get().defaultBlockState()), new DishFoliagePlacer(ConstantInt.of(9), ConstantInt.of(0), 3), new TwoLayersFeatureSize(0, 0, 0)).ignoreVines().build());
		FeatureUtils.register(p_256317_, TOWERING_INFERNO, Feature.TREE, new TreeConfiguration.TreeConfigurationBuilder(BlockStateProvider.simple(TechnologicaBlocks.INFERNAL_LOG.get().defaultBlockState()), new StraightTrunkPlacer(10, 10, 0), BlockStateProvider.simple(Blocks.FIRE.defaultBlockState()), new ConicalFoliagePlacer(ConstantInt.of(9), ConstantInt.of(0)), new TwoLayersFeatureSize(0, 0, 0)).ignoreVines().build());
	}
}